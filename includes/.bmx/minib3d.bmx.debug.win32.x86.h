#ifndef INCLUDES_MINIB3D_BMX_DEBUG_WIN32_X86_H
#define INCLUDES_MINIB3D_BMX_DEBUG_WIN32_X86_H

#include <brl.mod/blitz.mod/.bmx/blitz.bmx.debug.win32.x86.h>
#include <brl.mod/appstub.mod/.bmx/appstub.bmx.debug.win32.x86.h>
#include <brl.mod/audio.mod/.bmx/audio.bmx.debug.win32.x86.h>
#include <brl.mod/bank.mod/.bmx/bank.bmx.debug.win32.x86.h>
#include <brl.mod/bankstream.mod/.bmx/bankstream.bmx.debug.win32.x86.h>
#include <brl.mod/base64.mod/.bmx/base64.bmx.debug.win32.x86.h>
#include <brl.mod/basic.mod/.bmx/basic.bmx.debug.win32.x86.h>
#include <brl.mod/bmploader.mod/.bmx/bmploader.bmx.debug.win32.x86.h>
#include <brl.mod/bytebuffer.mod/.bmx/bytebuffer.bmx.debug.win32.x86.h>
#include <brl.mod/clipboard.mod/.bmx/clipboard.bmx.debug.win32.x86.h>
#include <brl.mod/collections.mod/.bmx/collections.bmx.debug.win32.x86.h>
#include <brl.mod/d3d7max2d.mod/.bmx/d3d7max2d.bmx.debug.win32.x86.h>
#include <brl.mod/d3d9max2d.mod/.bmx/d3d9max2d.bmx.debug.win32.x86.h>
#include <brl.mod/directsoundaudio.mod/.bmx/directsoundaudio.bmx.debug.win32.x86.h>
#include <brl.mod/eventqueue.mod/.bmx/eventqueue.bmx.debug.win32.x86.h>
#include <brl.mod/freeaudioaudio.mod/.bmx/freeaudioaudio.bmx.debug.win32.x86.h>
#include <brl.mod/freetypefont.mod/.bmx/freetypefont.bmx.debug.win32.x86.h>
#include <brl.mod/glgraphics.mod/.bmx/glgraphics.bmx.debug.win32.x86.h>
#include <brl.mod/glmax2d.mod/.bmx/glmax2d.bmx.debug.win32.x86.h>
#include <brl.mod/gnet.mod/.bmx/gnet.bmx.debug.win32.x86.h>
#include <brl.mod/jpgloader.mod/.bmx/jpgloader.bmx.debug.win32.x86.h>
#include <brl.mod/map.mod/.bmx/map.bmx.debug.win32.x86.h>
#include <brl.mod/matrix.mod/.bmx/matrix.bmx.debug.win32.x86.h>
#include <brl.mod/maxlua.mod/.bmx/maxlua.bmx.debug.win32.x86.h>
#include <brl.mod/maxunit.mod/.bmx/maxunit.bmx.debug.win32.x86.h>
#include <brl.mod/maxutil.mod/.bmx/maxutil.bmx.debug.win32.x86.h>
#include <brl.mod/objectlist.mod/.bmx/objectlist.bmx.debug.win32.x86.h>
#include <brl.mod/oggloader.mod/.bmx/oggloader.bmx.debug.win32.x86.h>
#include <brl.mod/openalaudio.mod/.bmx/openalaudio.bmx.debug.win32.x86.h>
#include <brl.mod/platform.mod/.bmx/platform.bmx.debug.win32.x86.h>
#include <brl.mod/pngloader.mod/.bmx/pngloader.bmx.debug.win32.x86.h>
#include <brl.mod/quaternion.mod/.bmx/quaternion.bmx.debug.win32.x86.h>
#include <brl.mod/randomdefault.mod/.bmx/randomdefault.bmx.debug.win32.x86.h>
#include <brl.mod/retro.mod/.bmx/retro.bmx.debug.win32.x86.h>
#include <brl.mod/tgaloader.mod/.bmx/tgaloader.bmx.debug.win32.x86.h>
#include <brl.mod/threadpool.mod/.bmx/threadpool.bmx.debug.win32.x86.h>
#include <brl.mod/timer.mod/.bmx/timer.bmx.debug.win32.x86.h>
#include <brl.mod/timerdefault.mod/.bmx/timerdefault.bmx.debug.win32.x86.h>
#include <brl.mod/uuid.mod/.bmx/uuid.bmx.debug.win32.x86.h>
#include <brl.mod/volumes.mod/.bmx/volumes.bmx.debug.win32.x86.h>
#include <brl.mod/wavloader.mod/.bmx/wavloader.bmx.debug.win32.x86.h>
#include <pub.mod/freejoy.mod/.bmx/freejoy.bmx.debug.win32.x86.h>
#include <pub.mod/freeprocess.mod/.bmx/freeprocess.bmx.debug.win32.x86.h>
#include <pub.mod/glad.mod/.bmx/glad.bmx.debug.win32.x86.h>
#include <pub.mod/nfd.mod/.bmx/nfd.bmx.debug.win32.x86.h>
#include <pub.mod/nx.mod/.bmx/nx.bmx.debug.win32.x86.h>
#include <pub.mod/opengles.mod/.bmx/opengles.bmx.debug.win32.x86.h>
#include <pub.mod/opengles3.mod/.bmx/opengles3.bmx.debug.win32.x86.h>
#include <pub.mod/vulkan.mod/.bmx/vulkan.bmx.debug.win32.x86.h>
#include <pub.mod/xmmintrin.mod/.bmx/xmmintrin.bmx.debug.win32.x86.h>
int _bb_includes_minib3d();
struct _m_minib3d_TGlobal_obj;
struct _m_minib3d_TEntity_obj;
struct _m_minib3d_TCamera_obj;
struct _m_minib3d_TLight_obj;
struct _m_minib3d_TPivot_obj;
struct _m_minib3d_TMesh_obj;
struct _m_minib3d_TSprite_obj;
struct _m_minib3d_TBone_obj;
struct _m_minib3d_TSurface_obj;
struct _m_minib3d_TTexture_obj;
struct _m_minib3d_TTextureFilter_obj;
struct _m_minib3d_TBrush_obj;
struct _m_minib3d_TAnimation_obj;
struct _m_minib3d_TAnimationKeys_obj;
struct _m_minib3d_TModel_obj;
struct _m_minib3d_TColTree_obj;
struct _m_minib3d_TPick_obj;
struct _m_minib3d_TCollisionPair_obj;
struct _m_minib3d_TCollisionImpact_obj;
struct _m_minib3d_TVector_obj;
struct _m_minib3d_TMatrix_obj;
struct _m_minib3d_TQuaternion_obj;
struct _m_minib3d_THardwareInfo_obj;
struct _m_minib3d_TBlitz2D_obj;
struct _m_minib3d_TUtility_obj;
struct _m_minib3d_TDebug_obj;
void __m_minib3d_TGlobal_New(struct _m_minib3d_TGlobal_obj* o);
typedef BBINT (*_m_minib3d_TGlobal_Graphics3D_i_iiiiii_f)(BBINT,BBINT,BBINT,BBINT,BBINT,BBINT);
BBINT _m_minib3d_TGlobal_Graphics3D_i_iiiiii(BBINT,BBINT,BBINT,BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TGlobal_AntiAlias_i_i_f)(BBINT);
BBINT _m_minib3d_TGlobal_AntiAlias_i_i(BBINT);
typedef BBINT (*_m_minib3d_TGlobal_Wireframe_i_i_f)(BBINT);
BBINT _m_minib3d_TGlobal_Wireframe_i_i(BBINT);
typedef BBINT (*_m_minib3d_TGlobal_AmbientLight_i_fff_f)(BBFLOAT,BBFLOAT,BBFLOAT);
BBINT _m_minib3d_TGlobal_AmbientLight_i_fff(BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TGlobal_ClearCollisions_i_f)();
BBINT _m_minib3d_TGlobal_ClearCollisions_i();
typedef BBINT (*_m_minib3d_TGlobal_Collisions_i_iiii_f)(BBINT,BBINT,BBINT,BBINT);
BBINT _m_minib3d_TGlobal_Collisions_i_iiii(BBINT,BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TGlobal_ClearWorld_i_iii_f)(BBINT,BBINT,BBINT);
BBINT _m_minib3d_TGlobal_ClearWorld_i_iii(BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TGlobal_UpdateWorld_i_f_f)(BBFLOAT);
BBINT _m_minib3d_TGlobal_UpdateWorld_i_f(BBFLOAT);
typedef BBINT (*_m_minib3d_TGlobal_RenderWorld_i_f)();
BBINT _m_minib3d_TGlobal_RenderWorld_i();
typedef BBINT (*_m_minib3d_TGlobal_RenderWorldAA_i_f)();
BBINT _m_minib3d_TGlobal_RenderWorldAA_i();
typedef BBINT (*_m_minib3d_TGlobal_RenderCamera_i_TTCamera_f)(struct _m_minib3d_TCamera_obj*);
BBINT _m_minib3d_TGlobal_RenderCamera_i_TTCamera(struct _m_minib3d_TCamera_obj*);
typedef BBINT (*_m_minib3d_TGlobal_AutoFade_i_TTCameraTTMesh_f)(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TMesh_obj*);
BBINT _m_minib3d_TGlobal_AutoFade_i_TTCameraTTMesh(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TGlobal_GraphicsInit_i_f)();
BBINT _m_minib3d_TGlobal_GraphicsInit_i();
typedef BBINT (*_m_minib3d_TGlobal_EnableStates_i_f)();
BBINT _m_minib3d_TGlobal_EnableStates_i();
typedef BBINT (*_m_minib3d_TGlobal_RenderListAdd_i_TTMeshTTList_f)(struct _m_minib3d_TMesh_obj*,struct brl_linkedlist_TList_obj*);
BBINT _m_minib3d_TGlobal_RenderListAdd_i_TTMeshTTList(struct _m_minib3d_TMesh_obj*,struct brl_linkedlist_TList_obj*);
typedef BBINT (*_m_minib3d_TGlobal_UpdateSprites_i_TTCameraTTList_f)(struct _m_minib3d_TCamera_obj*,struct brl_linkedlist_TList_obj*);
BBINT _m_minib3d_TGlobal_UpdateSprites_i_TTCameraTTList(struct _m_minib3d_TCamera_obj*,struct brl_linkedlist_TList_obj*);
struct BBClass__m_minib3d_TGlobal {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TGlobal_Graphics3D_i_iiiiii_f f_Graphics3D_i_iiiiii;
	_m_minib3d_TGlobal_AntiAlias_i_i_f f_AntiAlias_i_i;
	_m_minib3d_TGlobal_Wireframe_i_i_f f_Wireframe_i_i;
	_m_minib3d_TGlobal_AmbientLight_i_fff_f f_AmbientLight_i_fff;
	_m_minib3d_TGlobal_ClearCollisions_i_f f_ClearCollisions_i;
	_m_minib3d_TGlobal_Collisions_i_iiii_f f_Collisions_i_iiii;
	_m_minib3d_TGlobal_ClearWorld_i_iii_f f_ClearWorld_i_iii;
	_m_minib3d_TGlobal_UpdateWorld_i_f_f f_UpdateWorld_i_f;
	_m_minib3d_TGlobal_RenderWorld_i_f f_RenderWorld_i;
	_m_minib3d_TGlobal_RenderWorldAA_i_f f_RenderWorldAA_i;
	_m_minib3d_TGlobal_RenderCamera_i_TTCamera_f f_RenderCamera_i_TTCamera;
	_m_minib3d_TGlobal_AutoFade_i_TTCameraTTMesh_f f_AutoFade_i_TTCameraTTMesh;
	_m_minib3d_TGlobal_GraphicsInit_i_f f_GraphicsInit_i;
	_m_minib3d_TGlobal_EnableStates_i_f f_EnableStates_i;
	_m_minib3d_TGlobal_RenderListAdd_i_TTMeshTTList_f f_RenderListAdd_i_TTMeshTTList;
	_m_minib3d_TGlobal_UpdateSprites_i_TTCameraTTList_f f_UpdateSprites_i_TTCameraTTList;
};

struct _m_minib3d_TGlobal_obj {
	struct BBClass__m_minib3d_TGlobal* clas;
};
extern struct BBClass__m_minib3d_TGlobal _m_minib3d_TGlobal;
extern BBINT _m_minib3d_TGlobal_width;
extern BBINT _m_minib3d_TGlobal_height;
extern BBINT _m_minib3d_TGlobal_mode;
extern BBINT _m_minib3d_TGlobal_depth;
extern BBINT _m_minib3d_TGlobal_rate;
extern BBFLOAT _m_minib3d_TGlobal_ambient_red;
extern BBFLOAT _m_minib3d_TGlobal_ambient_green;
extern BBFLOAT _m_minib3d_TGlobal_ambient_blue;
extern BBINT _m_minib3d_TGlobal_vbo_enabled;
extern BBINT _m_minib3d_TGlobal_aa;
extern BBINT _m_minib3d_TGlobal_ACSIZE;
extern BBINT _m_minib3d_TGlobal_jitter;
extern BBARRAY _m_minib3d_TGlobal_j;
void __m_minib3d_TEntity_New(struct _m_minib3d_TEntity_obj* o);
void __m_minib3d_TEntity_Delete(struct _m_minib3d_TEntity_obj* o);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_CopyEntity_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_CopyEntity_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_Update_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_Update(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_FreeEntity_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_FreeEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_PositionEntity_fffi_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TEntity_PositionEntity_fffi(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_MoveEntity_fff_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TEntity_MoveEntity_fff(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_TranslateEntity_fffi_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TEntity_TranslateEntity_fffi(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_ScaleEntity_fffi_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TEntity_ScaleEntity_fffi(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_RotateEntity_fffi_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TEntity_RotateEntity_fffi(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_TurnEntity_fffi_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TEntity_TurnEntity_fffi(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_PointEntity_TTEntityf_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*,BBFLOAT);
BBINT __m_minib3d_TEntity_PointEntity_TTEntityf(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_LoadAnimSeq_S_m)(struct _m_minib3d_TEntity_obj*,BBSTRING);
BBINT __m_minib3d_TEntity_LoadAnimSeq_S(struct _m_minib3d_TEntity_obj*,BBSTRING);
typedef BBINT (*_m_minib3d_TEntity_ExtractAnimSeq_iii_m)(struct _m_minib3d_TEntity_obj*,BBINT,BBINT,BBINT);
BBINT __m_minib3d_TEntity_ExtractAnimSeq_iii(struct _m_minib3d_TEntity_obj*,BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_Animate_ifii_m)(struct _m_minib3d_TEntity_obj*,BBINT,BBFLOAT,BBINT,BBINT);
BBINT __m_minib3d_TEntity_Animate_ifii(struct _m_minib3d_TEntity_obj*,BBINT,BBFLOAT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_SetAnimTime_fi_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBINT);
BBINT __m_minib3d_TEntity_SetAnimTime_fi(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_AnimSeq_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_AnimSeq(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_AnimLength_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_AnimLength(struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_AnimTime_m)(struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TEntity_AnimTime(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_Animating_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_Animating(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_EntityColor_fff_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TEntity_EntityColor_fff(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_EntityAlpha_f_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT);
BBINT __m_minib3d_TEntity_EntityAlpha_f(struct _m_minib3d_TEntity_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_EntityShininess_f_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT);
BBINT __m_minib3d_TEntity_EntityShininess_f(struct _m_minib3d_TEntity_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_EntityTexture_TTTextureii_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TTexture_obj*,BBINT,BBINT);
BBINT __m_minib3d_TEntity_EntityTexture_TTTextureii(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TTexture_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_EntityBlend_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBINT __m_minib3d_TEntity_EntityBlend_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_EntityFX_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBINT __m_minib3d_TEntity_EntityFX_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_EntityAutoFade_ff_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TEntity_EntityAutoFade_ff(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_PaintEntity_TTBrush_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TBrush_obj*);
BBINT __m_minib3d_TEntity_PaintEntity_TTBrush(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TBrush_obj*);
typedef BBINT (*_m_minib3d_TEntity_EntityOrder_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBINT __m_minib3d_TEntity_EntityOrder_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_ShowEntity_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_ShowEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_HideEntity_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_HideEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_Hidden_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_Hidden(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_NameEntity_S_m)(struct _m_minib3d_TEntity_obj*,BBSTRING);
BBINT __m_minib3d_TEntity_NameEntity_S(struct _m_minib3d_TEntity_obj*,BBSTRING);
typedef BBINT (*_m_minib3d_TEntity_EntityParent_TTEntityi_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*,BBINT);
BBINT __m_minib3d_TEntity_EntityParent_TTEntityi(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*,BBINT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_GetParent_m)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_GetParent(struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityX_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityX_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityY_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityY_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityZ_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityZ_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityPitch_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityPitch_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityYaw_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityYaw_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityRoll_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityRoll_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBSTRING (*_m_minib3d_TEntity_EntityClass_m)(struct _m_minib3d_TEntity_obj*);
BBSTRING __m_minib3d_TEntity_EntityClass(struct _m_minib3d_TEntity_obj*);
typedef BBSTRING (*_m_minib3d_TEntity_EntityName_m)(struct _m_minib3d_TEntity_obj*);
BBSTRING __m_minib3d_TEntity_EntityName(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_CountChildren_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_CountChildren(struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_GetChild_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_GetChild_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_FindChild_S_m)(struct _m_minib3d_TEntity_obj*,BBSTRING);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_FindChild_S(struct _m_minib3d_TEntity_obj*,BBSTRING);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_EntityPick_f_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_EntityPick_f(struct _m_minib3d_TEntity_obj*,BBFLOAT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_LinePick_fffffff_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_LinePick_fffffff(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_EntityVisible_TTEntityTTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityDistance_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TEntity_EntityDistance_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_DeltaYaw_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TEntity_DeltaYaw_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_DeltaPitch_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TEntity_DeltaPitch_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f)(BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity(BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f)(BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity(BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f)(BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity(BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_TFormedX_f_f)();
BBFLOAT _m_minib3d_TEntity_TFormedX_f();
typedef BBFLOAT (*_m_minib3d_TEntity_TFormedY_f_f)();
BBFLOAT _m_minib3d_TEntity_TFormedY_f();
typedef BBFLOAT (*_m_minib3d_TEntity_TFormedZ_f_f)();
BBFLOAT _m_minib3d_TEntity_TFormedZ_f();
typedef BBFLOAT (*_m_minib3d_TEntity_GetMatElement_ii_m)(struct _m_minib3d_TEntity_obj*,BBINT,BBINT);
BBFLOAT __m_minib3d_TEntity_GetMatElement_ii(struct _m_minib3d_TEntity_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_ResetEntity_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_ResetEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_EntityRadius_ff_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TEntity_EntityRadius_ff(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_EntityBox_ffffff_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TEntity_EntityBox_ffffff(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TEntity_EntityType_ii_m)(struct _m_minib3d_TEntity_obj*,BBINT,BBINT);
BBINT __m_minib3d_TEntity_EntityType_ii(struct _m_minib3d_TEntity_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TEntity_EntityPickMode_ii_m)(struct _m_minib3d_TEntity_obj*,BBINT,BBINT);
BBINT __m_minib3d_TEntity_EntityPickMode_ii(struct _m_minib3d_TEntity_obj*,BBINT,BBINT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_EntityCollided_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_EntityCollided_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_CountCollisions_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_CountCollisions(struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionX_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionX_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionY_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionY_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionZ_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionZ_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionNX_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionNX_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionNY_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionNY_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionNZ_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionNZ_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_CollisionTime_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_CollisionTime_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_CollisionEntity_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_CollisionEntity_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef struct _m_minib3d_TSurface_obj* (*_m_minib3d_TEntity_CollisionSurface_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
struct _m_minib3d_TSurface_obj* __m_minib3d_TEntity_CollisionSurface_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_CollisionTriangle_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBINT __m_minib3d_TEntity_CollisionTriangle_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_GetEntityType_m)(struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_GetEntityType(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_MeshCullRadius_f_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT);
BBINT __m_minib3d_TEntity_MeshCullRadius_f(struct _m_minib3d_TEntity_obj*,BBFLOAT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityScaleX_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityScaleX_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityScaleY_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityScaleY_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityScaleZ_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBFLOAT __m_minib3d_TEntity_EntityScaleZ_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m)(struct _m_minib3d_TEntity_obj*,BBFLOAT*,BBFLOAT*,BBFLOAT*,BBFLOAT*);
BBINT __m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf(struct _m_minib3d_TEntity_obj*,BBFLOAT*,BBFLOAT*,BBFLOAT*,BBFLOAT*);
typedef BBINT (*_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f)(struct _m_minib3d_TEntity_obj*,BBINT);
BBINT _m_minib3d_TEntity_CountAllChildren_i_TTEntityi(struct _m_minib3d_TEntity_obj*,BBINT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m)(struct _m_minib3d_TEntity_obj*,BBINT,BBINT*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TEntity_obj* __m_minib3d_TEntity_GetChildFromAll_iviTTEntity(struct _m_minib3d_TEntity_obj*,BBINT,BBINT*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_UpdateMat_i_m)(struct _m_minib3d_TEntity_obj*,BBINT);
BBINT __m_minib3d_TEntity_UpdateMat_i(struct _m_minib3d_TEntity_obj*,BBINT);
typedef BBINT (*_m_minib3d_TEntity_AddParent_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBINT __m_minib3d_TEntity_AddParent_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TEntity_UpdateChildren_i_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TEntity_EntityDistanceSquared0_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TEntity_EntityDistanceSquared_TTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TEntity_EntityListAdd_TTList_m)(struct _m_minib3d_TEntity_obj*,struct brl_linkedlist_TList_obj*);
BBINT __m_minib3d_TEntity_EntityListAdd_TTList(struct _m_minib3d_TEntity_obj*,struct brl_linkedlist_TList_obj*);
struct BBClass__m_minib3d_TEntity {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TEntity_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TEntity_Update_m m_Update;
	_m_minib3d_TEntity_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
};

struct _m_minib3d_TEntity_obj {
	struct BBClass__m_minib3d_TEntity* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
};
extern struct BBClass__m_minib3d_TEntity _m_minib3d_TEntity;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TEntity_entity_list;
extern BBFLOAT _m_minib3d_TEntity_tformed_x;
extern BBFLOAT _m_minib3d_TEntity_tformed_y;
extern BBFLOAT _m_minib3d_TEntity_tformed_z;
void __m_minib3d_TCamera_New(struct _m_minib3d_TCamera_obj* o);
void __m_minib3d_TCamera_Delete(struct _m_minib3d_TCamera_obj* o);
typedef struct _m_minib3d_TCamera_obj* (*_m_minib3d_TCamera_CopyEntity_TTEntity_m)(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TCamera_obj* __m_minib3d_TCamera_CopyEntity_TTEntity(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TCamera_FreeEntity_m)(struct _m_minib3d_TCamera_obj*);
BBINT __m_minib3d_TCamera_FreeEntity(struct _m_minib3d_TCamera_obj*);
typedef struct _m_minib3d_TCamera_obj* (*_m_minib3d_TCamera_CreateCamera_TTCamera_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TCamera_obj* _m_minib3d_TCamera_CreateCamera_TTCamera_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TCamera_CameraViewport_iiii_m)(struct _m_minib3d_TCamera_obj*,BBINT,BBINT,BBINT,BBINT);
BBINT __m_minib3d_TCamera_CameraViewport_iiii(struct _m_minib3d_TCamera_obj*,BBINT,BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TCamera_CameraClsColor_fff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_CameraClsColor_fff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_CameraClsMode_ii_m)(struct _m_minib3d_TCamera_obj*,BBINT,BBINT);
BBINT __m_minib3d_TCamera_CameraClsMode_ii(struct _m_minib3d_TCamera_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TCamera_CameraRange_ff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_CameraRange_ff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_CameraZoom_f_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT);
BBINT __m_minib3d_TCamera_CameraZoom_f(struct _m_minib3d_TCamera_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_CameraProjMode_i_m)(struct _m_minib3d_TCamera_obj*,BBINT);
BBINT __m_minib3d_TCamera_CameraProjMode_i(struct _m_minib3d_TCamera_obj*,BBINT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TCamera_CameraPick_ff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
struct _m_minib3d_TEntity_obj* __m_minib3d_TCamera_CameraPick_ff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_CameraFogMode_i_m)(struct _m_minib3d_TCamera_obj*,BBINT);
BBINT __m_minib3d_TCamera_CameraFogMode_i(struct _m_minib3d_TCamera_obj*,BBINT);
typedef BBINT (*_m_minib3d_TCamera_CameraFogColor_fff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_CameraFogColor_fff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_CameraFogRange_ff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_CameraFogRange_ff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_CameraProject_fff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_CameraProject_fff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBFLOAT (*_m_minib3d_TCamera_ProjectedX_m)(struct _m_minib3d_TCamera_obj*);
BBFLOAT __m_minib3d_TCamera_ProjectedX(struct _m_minib3d_TCamera_obj*);
typedef BBFLOAT (*_m_minib3d_TCamera_ProjectedY_m)(struct _m_minib3d_TCamera_obj*);
BBFLOAT __m_minib3d_TCamera_ProjectedY(struct _m_minib3d_TCamera_obj*);
typedef BBFLOAT (*_m_minib3d_TCamera_ProjectedZ_m)(struct _m_minib3d_TCamera_obj*);
BBFLOAT __m_minib3d_TCamera_ProjectedZ(struct _m_minib3d_TCamera_obj*);
typedef BBFLOAT (*_m_minib3d_TCamera_EntityInView_TTEntity_m)(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TCamera_EntityInView_TTEntity(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TCamera_ExtractFrustum_m)(struct _m_minib3d_TCamera_obj*);
BBINT __m_minib3d_TCamera_ExtractFrustum(struct _m_minib3d_TCamera_obj*);
typedef BBFLOAT (*_m_minib3d_TCamera_EntityInFrustum_TTEntity_m)(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TEntity_obj*);
BBFLOAT __m_minib3d_TCamera_EntityInFrustum_TTEntity(struct _m_minib3d_TCamera_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TCamera_Update_m)(struct _m_minib3d_TCamera_obj*);
BBINT __m_minib3d_TCamera_Update(struct _m_minib3d_TCamera_obj*);
typedef BBINT (*_m_minib3d_TCamera_accPerspective_fffffffff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_accPerspective_fffffffff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TCamera_accFrustum_fffffffffff_m)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TCamera_accFrustum_fffffffffff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
struct BBClass__m_minib3d_TCamera {
	struct BBClass__m_minib3d_TEntity*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TCamera_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TCamera_Update_m m_Update;
	_m_minib3d_TCamera_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
	_m_minib3d_TCamera_CreateCamera_TTCamera_TTEntity_f f_CreateCamera_TTCamera_TTEntity;
	_m_minib3d_TCamera_CameraViewport_iiii_m m_CameraViewport_iiii;
	_m_minib3d_TCamera_CameraClsColor_fff_m m_CameraClsColor_fff;
	_m_minib3d_TCamera_CameraClsMode_ii_m m_CameraClsMode_ii;
	_m_minib3d_TCamera_CameraRange_ff_m m_CameraRange_ff;
	_m_minib3d_TCamera_CameraZoom_f_m m_CameraZoom_f;
	_m_minib3d_TCamera_CameraProjMode_i_m m_CameraProjMode_i;
	_m_minib3d_TCamera_CameraPick_ff_m m_CameraPick_ff;
	_m_minib3d_TCamera_CameraFogMode_i_m m_CameraFogMode_i;
	_m_minib3d_TCamera_CameraFogColor_fff_m m_CameraFogColor_fff;
	_m_minib3d_TCamera_CameraFogRange_ff_m m_CameraFogRange_ff;
	_m_minib3d_TCamera_CameraProject_fff_m m_CameraProject_fff;
	_m_minib3d_TCamera_ProjectedX_m m_ProjectedX;
	_m_minib3d_TCamera_ProjectedY_m m_ProjectedY;
	_m_minib3d_TCamera_ProjectedZ_m m_ProjectedZ;
	_m_minib3d_TCamera_EntityInView_TTEntity_m m_EntityInView_TTEntity;
	_m_minib3d_TCamera_ExtractFrustum_m m_ExtractFrustum;
	_m_minib3d_TCamera_EntityInFrustum_TTEntity_m m_EntityInFrustum_TTEntity;
	_m_minib3d_TCamera_accPerspective_fffffffff_m m_accPerspective_fffffffff;
	_m_minib3d_TCamera_accFrustum_fffffffffff_m m_accFrustum_fffffffffff;
};

struct _m_minib3d_TCamera_obj {
	struct BBClass__m_minib3d_TCamera* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
	BBINT __m_minib3d_tcamera_vx;
	BBINT __m_minib3d_tcamera_vy;
	BBINT __m_minib3d_tcamera_vwidth;
	BBINT __m_minib3d_tcamera_vheight;
	BBFLOAT __m_minib3d_tcamera_cls_r;
	BBFLOAT __m_minib3d_tcamera_cls_g;
	BBFLOAT __m_minib3d_tcamera_cls_b;
	BBINT __m_minib3d_tcamera_cls_color;
	BBINT __m_minib3d_tcamera_cls_zbuffer;
	BBFLOAT __m_minib3d_tcamera_range_near;
	BBFLOAT __m_minib3d_tcamera_range_far;
	BBFLOAT __m_minib3d_tcamera_zoom;
	BBINT __m_minib3d_tcamera_proj_mode;
	BBINT __m_minib3d_tcamera_fog_mode;
	BBFLOAT __m_minib3d_tcamera_fog_r;
	BBFLOAT __m_minib3d_tcamera_fog_g;
	BBFLOAT __m_minib3d_tcamera_fog_b;
	BBFLOAT __m_minib3d_tcamera_fog_range_near;
	BBFLOAT __m_minib3d_tcamera_fog_range_far;
	BBARRAY __m_minib3d_tcamera_mod_mat;
	BBARRAY __m_minib3d_tcamera_proj_mat;
	BBARRAY __m_minib3d_tcamera_viewport;
	BBARRAY __m_minib3d_tcamera_frustum;
};
extern struct BBClass__m_minib3d_TCamera _m_minib3d_TCamera;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TCamera_cam_list;
extern BBFLOAT _m_minib3d_TCamera_projected_x;
extern BBFLOAT _m_minib3d_TCamera_projected_y;
extern BBFLOAT _m_minib3d_TCamera_projected_z;
void __m_minib3d_TLight_New(struct _m_minib3d_TLight_obj* o);
void __m_minib3d_TLight_Delete(struct _m_minib3d_TLight_obj* o);
typedef struct _m_minib3d_TLight_obj* (*_m_minib3d_TLight_CopyEntity_TTEntity_m)(struct _m_minib3d_TLight_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TLight_obj* __m_minib3d_TLight_CopyEntity_TTEntity(struct _m_minib3d_TLight_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TLight_FreeEntity_m)(struct _m_minib3d_TLight_obj*);
BBINT __m_minib3d_TLight_FreeEntity(struct _m_minib3d_TLight_obj*);
typedef struct _m_minib3d_TLight_obj* (*_m_minib3d_TLight_CreateLight_TTLight_iTTEntity_f)(BBINT,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TLight_obj* _m_minib3d_TLight_CreateLight_TTLight_iTTEntity(BBINT,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TLight_LightRange_f_m)(struct _m_minib3d_TLight_obj*,BBFLOAT);
BBINT __m_minib3d_TLight_LightRange_f(struct _m_minib3d_TLight_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TLight_LightColor_fff_m)(struct _m_minib3d_TLight_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TLight_LightColor_fff(struct _m_minib3d_TLight_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TLight_LightConeAngles_ff_m)(struct _m_minib3d_TLight_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TLight_LightConeAngles_ff(struct _m_minib3d_TLight_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TLight_Update_m)(struct _m_minib3d_TLight_obj*);
BBINT __m_minib3d_TLight_Update(struct _m_minib3d_TLight_obj*);
struct BBClass__m_minib3d_TLight {
	struct BBClass__m_minib3d_TEntity*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TLight_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TLight_Update_m m_Update;
	_m_minib3d_TLight_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
	_m_minib3d_TLight_CreateLight_TTLight_iTTEntity_f f_CreateLight_TTLight_iTTEntity;
	_m_minib3d_TLight_LightRange_f_m m_LightRange_f;
	_m_minib3d_TLight_LightColor_fff_m m_LightColor_fff;
	_m_minib3d_TLight_LightConeAngles_ff_m m_LightConeAngles_ff;
};

struct _m_minib3d_TLight_obj {
	struct BBClass__m_minib3d_TLight* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
	BBINT __m_minib3d_tlight_light_type;
	BBFLOAT __m_minib3d_tlight_range;
	BBFLOAT __m_minib3d_tlight_red;
	BBFLOAT __m_minib3d_tlight_green;
	BBFLOAT __m_minib3d_tlight_blue;
	BBFLOAT __m_minib3d_tlight_inner_ang;
	BBFLOAT __m_minib3d_tlight_outer_ang;
};
extern struct BBClass__m_minib3d_TLight _m_minib3d_TLight;
extern BBINT _m_minib3d_TLight_light_no;
extern BBINT _m_minib3d_TLight_no_lights;
extern BBINT _m_minib3d_TLight_max_lights;
extern BBARRAY _m_minib3d_TLight_gl_light;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TLight_light_list;
void __m_minib3d_TPivot_New(struct _m_minib3d_TPivot_obj* o);
void __m_minib3d_TPivot_Delete(struct _m_minib3d_TPivot_obj* o);
typedef struct _m_minib3d_TPivot_obj* (*_m_minib3d_TPivot_CopyEntity_TTEntity_m)(struct _m_minib3d_TPivot_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TPivot_obj* __m_minib3d_TPivot_CopyEntity_TTEntity(struct _m_minib3d_TPivot_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TPivot_FreeEntity_m)(struct _m_minib3d_TPivot_obj*);
BBINT __m_minib3d_TPivot_FreeEntity(struct _m_minib3d_TPivot_obj*);
typedef struct _m_minib3d_TPivot_obj* (*_m_minib3d_TPivot_CreatePivot_TTPivot_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TPivot_obj* _m_minib3d_TPivot_CreatePivot_TTPivot_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TPivot_Update_m)(struct _m_minib3d_TPivot_obj*);
BBINT __m_minib3d_TPivot_Update(struct _m_minib3d_TPivot_obj*);
struct BBClass__m_minib3d_TPivot {
	struct BBClass__m_minib3d_TEntity*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TPivot_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TPivot_Update_m m_Update;
	_m_minib3d_TPivot_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
	_m_minib3d_TPivot_CreatePivot_TTPivot_TTEntity_f f_CreatePivot_TTPivot_TTEntity;
};

struct _m_minib3d_TPivot_obj {
	struct BBClass__m_minib3d_TPivot* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
};
extern struct BBClass__m_minib3d_TPivot _m_minib3d_TPivot;
void __m_minib3d_TMesh_New(struct _m_minib3d_TMesh_obj* o);
void __m_minib3d_TMesh_Delete(struct _m_minib3d_TMesh_obj* o);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CopyEntity_TTEntity_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* __m_minib3d_TMesh_CopyEntity_TTEntity(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TMesh_FreeEntity_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_FreeEntity(struct _m_minib3d_TMesh_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CreateMesh_TTMesh_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_CreateMesh_TTMesh_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_LoadMesh_TTMesh_STTEntity_f)(BBSTRING,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_LoadMesh_TTMesh_STTEntity(BBSTRING,struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_LoadAnimMesh_TTMesh_STTEntity_f)(BBSTRING,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_LoadAnimMesh_TTMesh_STTEntity(BBSTRING,struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CreateCube_TTMesh_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_CreateCube_TTMesh_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CreateSphere_TTMesh_iTTEntity_f)(BBINT,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_CreateSphere_TTMesh_iTTEntity(BBINT,struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CreateCylinder_TTMesh_iiTTEntity_f)(BBINT,BBINT,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_CreateCylinder_TTMesh_iiTTEntity(BBINT,BBINT,struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CreateCone_TTMesh_iiTTEntity_f)(BBINT,BBINT,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_CreateCone_TTMesh_iiTTEntity(BBINT,BBINT,struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CopyMesh_TTEntity_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* __m_minib3d_TMesh_CopyMesh_TTEntity(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TMesh_AddMesh_TTMesh_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_AddMesh_TTMesh(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_FlipMesh_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_FlipMesh(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_PaintMesh_TTBrush_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TBrush_obj*);
BBINT __m_minib3d_TMesh_PaintMesh_TTBrush(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TBrush_obj*);
typedef BBINT (*_m_minib3d_TMesh_FitMesh_ffffffi_m)(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TMesh_FitMesh_ffffffi(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBINT (*_m_minib3d_TMesh_ScaleMesh_fff_m)(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TMesh_ScaleMesh_fff(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TMesh_RotateMesh_fff_m)(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TMesh_RotateMesh_fff(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TMesh_PositionMesh_fff_m)(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TMesh_PositionMesh_fff(struct _m_minib3d_TMesh_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TMesh_UpdateNormals_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_UpdateNormals(struct _m_minib3d_TMesh_obj*);
typedef struct _m_minib3d_TSurface_obj* (*_m_minib3d_TMesh_CreateSurface_TTBrush_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TBrush_obj*);
struct _m_minib3d_TSurface_obj* __m_minib3d_TMesh_CreateSurface_TTBrush(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TBrush_obj*);
typedef BBFLOAT (*_m_minib3d_TMesh_MeshWidth_m)(struct _m_minib3d_TMesh_obj*);
BBFLOAT __m_minib3d_TMesh_MeshWidth(struct _m_minib3d_TMesh_obj*);
typedef BBFLOAT (*_m_minib3d_TMesh_MeshHeight_m)(struct _m_minib3d_TMesh_obj*);
BBFLOAT __m_minib3d_TMesh_MeshHeight(struct _m_minib3d_TMesh_obj*);
typedef BBFLOAT (*_m_minib3d_TMesh_MeshDepth_m)(struct _m_minib3d_TMesh_obj*);
BBFLOAT __m_minib3d_TMesh_MeshDepth(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_CountSurfaces_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_CountSurfaces(struct _m_minib3d_TMesh_obj*);
typedef struct _m_minib3d_TSurface_obj* (*_m_minib3d_TMesh_GetSurface_i_m)(struct _m_minib3d_TMesh_obj*,BBINT);
struct _m_minib3d_TSurface_obj* __m_minib3d_TMesh_GetSurface_i(struct _m_minib3d_TMesh_obj*,BBINT);
typedef struct _m_minib3d_TSurface_obj* (*_m_minib3d_TMesh_FindSurface_TTBrush_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TBrush_obj*);
struct _m_minib3d_TSurface_obj* __m_minib3d_TMesh_FindSurface_TTBrush(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TBrush_obj*);
typedef BBINT (*_m_minib3d_TMesh_CountVertices_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_CountVertices(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_CountTriangles_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_CountTriangles(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_CopyBonesList_i_TTEntityvaTTBonevi_f)(struct _m_minib3d_TEntity_obj*,BBARRAY*,BBINT*);
BBINT _m_minib3d_TMesh_CopyBonesList_i_TTEntityvaTTBonevi(struct _m_minib3d_TEntity_obj*,BBARRAY*,BBINT*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CollapseAnimMesh_TTMesh_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TMesh_obj*);
struct _m_minib3d_TMesh_obj* __m_minib3d_TMesh_CollapseAnimMesh_TTMesh(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TMesh_obj*);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TMesh_CollapseChildren_TTMesh_TTEntityTTMesh_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TMesh_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TMesh_CollapseChildren_TTMesh_TTEntityTTMesh(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_TransformMesh_TTMatrix_m)(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TMatrix_obj*);
BBINT __m_minib3d_TMesh_TransformMesh_TTMatrix(struct _m_minib3d_TMesh_obj*,struct _m_minib3d_TMatrix_obj*);
typedef BBINT (*_m_minib3d_TMesh_GetBounds_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_GetBounds(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_Alpha_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_Alpha(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TMesh_Update_m)(struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TMesh_Update(struct _m_minib3d_TMesh_obj*);
struct BBClass__m_minib3d_TMesh {
	struct BBClass__m_minib3d_TEntity*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TMesh_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TMesh_Update_m m_Update;
	_m_minib3d_TMesh_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
	_m_minib3d_TMesh_CreateMesh_TTMesh_TTEntity_f f_CreateMesh_TTMesh_TTEntity;
	_m_minib3d_TMesh_LoadMesh_TTMesh_STTEntity_f f_LoadMesh_TTMesh_STTEntity;
	_m_minib3d_TMesh_LoadAnimMesh_TTMesh_STTEntity_f f_LoadAnimMesh_TTMesh_STTEntity;
	_m_minib3d_TMesh_CreateCube_TTMesh_TTEntity_f f_CreateCube_TTMesh_TTEntity;
	_m_minib3d_TMesh_CreateSphere_TTMesh_iTTEntity_f f_CreateSphere_TTMesh_iTTEntity;
	_m_minib3d_TMesh_CreateCylinder_TTMesh_iiTTEntity_f f_CreateCylinder_TTMesh_iiTTEntity;
	_m_minib3d_TMesh_CreateCone_TTMesh_iiTTEntity_f f_CreateCone_TTMesh_iiTTEntity;
	_m_minib3d_TMesh_CopyMesh_TTEntity_m m_CopyMesh_TTEntity;
	_m_minib3d_TMesh_AddMesh_TTMesh_m m_AddMesh_TTMesh;
	_m_minib3d_TMesh_FlipMesh_m m_FlipMesh;
	_m_minib3d_TMesh_PaintMesh_TTBrush_m m_PaintMesh_TTBrush;
	_m_minib3d_TMesh_FitMesh_ffffffi_m m_FitMesh_ffffffi;
	_m_minib3d_TMesh_ScaleMesh_fff_m m_ScaleMesh_fff;
	_m_minib3d_TMesh_RotateMesh_fff_m m_RotateMesh_fff;
	_m_minib3d_TMesh_PositionMesh_fff_m m_PositionMesh_fff;
	_m_minib3d_TMesh_UpdateNormals_m m_UpdateNormals;
	_m_minib3d_TMesh_CreateSurface_TTBrush_m m_CreateSurface_TTBrush;
	_m_minib3d_TMesh_MeshWidth_m m_MeshWidth;
	_m_minib3d_TMesh_MeshHeight_m m_MeshHeight;
	_m_minib3d_TMesh_MeshDepth_m m_MeshDepth;
	_m_minib3d_TMesh_CountSurfaces_m m_CountSurfaces;
	_m_minib3d_TMesh_GetSurface_i_m m_GetSurface_i;
	_m_minib3d_TMesh_FindSurface_TTBrush_m m_FindSurface_TTBrush;
	_m_minib3d_TMesh_CountVertices_m m_CountVertices;
	_m_minib3d_TMesh_CountTriangles_m m_CountTriangles;
	_m_minib3d_TMesh_CopyBonesList_i_TTEntityvaTTBonevi_f f_CopyBonesList_i_TTEntityvaTTBonevi;
	_m_minib3d_TMesh_CollapseAnimMesh_TTMesh_m m_CollapseAnimMesh_TTMesh;
	_m_minib3d_TMesh_CollapseChildren_TTMesh_TTEntityTTMesh_f f_CollapseChildren_TTMesh_TTEntityTTMesh;
	_m_minib3d_TMesh_TransformMesh_TTMatrix_m m_TransformMesh_TTMatrix;
	_m_minib3d_TMesh_GetBounds_m m_GetBounds;
	_m_minib3d_TMesh_Alpha_m m_Alpha;
};

struct _m_minib3d_TMesh_obj {
	struct BBClass__m_minib3d_TMesh* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
	BBFLOAT __m_minib3d_tmesh_min_x;
	BBFLOAT __m_minib3d_tmesh_min_y;
	BBFLOAT __m_minib3d_tmesh_min_z;
	BBFLOAT __m_minib3d_tmesh_max_x;
	BBFLOAT __m_minib3d_tmesh_max_y;
	BBFLOAT __m_minib3d_tmesh_max_z;
	BBINT __m_minib3d_tmesh_no_surfs;
	struct brl_linkedlist_TList_obj* __m_minib3d_tmesh_surf_list;
	struct brl_linkedlist_TList_obj* __m_minib3d_tmesh_anim_surf_list;
	BBINT __m_minib3d_tmesh_no_bones;
	BBARRAY __m_minib3d_tmesh_bones;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tmesh_mat_sp;
	struct _m_minib3d_TColTree_obj* __m_minib3d_tmesh_col_tree;
	BBINT __m_minib3d_tmesh_reset_bounds;
};
extern struct BBClass__m_minib3d_TMesh _m_minib3d_TMesh;
void __m_minib3d_TSprite_New(struct _m_minib3d_TSprite_obj* o);
void __m_minib3d_TSprite_Delete(struct _m_minib3d_TSprite_obj* o);
typedef struct _m_minib3d_TSprite_obj* (*_m_minib3d_TSprite_CopyEntity_TTEntity_m)(struct _m_minib3d_TSprite_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TSprite_obj* __m_minib3d_TSprite_CopyEntity_TTEntity(struct _m_minib3d_TSprite_obj*,struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TSprite_obj* (*_m_minib3d_TSprite_CreateSprite_TTSprite_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TSprite_obj* _m_minib3d_TSprite_CreateSprite_TTSprite_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TSprite_obj* (*_m_minib3d_TSprite_LoadSprite_TTSprite_SiTTEntity_f)(BBSTRING,BBINT,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TSprite_obj* _m_minib3d_TSprite_LoadSprite_TTSprite_SiTTEntity(BBSTRING,BBINT,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TSprite_RotateSprite_f_m)(struct _m_minib3d_TSprite_obj*,BBFLOAT);
BBINT __m_minib3d_TSprite_RotateSprite_f(struct _m_minib3d_TSprite_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TSprite_ScaleSprite_ff_m)(struct _m_minib3d_TSprite_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TSprite_ScaleSprite_ff(struct _m_minib3d_TSprite_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TSprite_HandleSprite_ff_m)(struct _m_minib3d_TSprite_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TSprite_HandleSprite_ff(struct _m_minib3d_TSprite_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TSprite_SpriteViewMode_i_m)(struct _m_minib3d_TSprite_obj*,BBINT);
BBINT __m_minib3d_TSprite_SpriteViewMode_i(struct _m_minib3d_TSprite_obj*,BBINT);
struct BBClass__m_minib3d_TSprite {
	struct BBClass__m_minib3d_TMesh*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TSprite_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TMesh_Update_m m_Update;
	_m_minib3d_TMesh_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
	_m_minib3d_TMesh_CreateMesh_TTMesh_TTEntity_f f_CreateMesh_TTMesh_TTEntity;
	_m_minib3d_TMesh_LoadMesh_TTMesh_STTEntity_f f_LoadMesh_TTMesh_STTEntity;
	_m_minib3d_TMesh_LoadAnimMesh_TTMesh_STTEntity_f f_LoadAnimMesh_TTMesh_STTEntity;
	_m_minib3d_TMesh_CreateCube_TTMesh_TTEntity_f f_CreateCube_TTMesh_TTEntity;
	_m_minib3d_TMesh_CreateSphere_TTMesh_iTTEntity_f f_CreateSphere_TTMesh_iTTEntity;
	_m_minib3d_TMesh_CreateCylinder_TTMesh_iiTTEntity_f f_CreateCylinder_TTMesh_iiTTEntity;
	_m_minib3d_TMesh_CreateCone_TTMesh_iiTTEntity_f f_CreateCone_TTMesh_iiTTEntity;
	_m_minib3d_TMesh_CopyMesh_TTEntity_m m_CopyMesh_TTEntity;
	_m_minib3d_TMesh_AddMesh_TTMesh_m m_AddMesh_TTMesh;
	_m_minib3d_TMesh_FlipMesh_m m_FlipMesh;
	_m_minib3d_TMesh_PaintMesh_TTBrush_m m_PaintMesh_TTBrush;
	_m_minib3d_TMesh_FitMesh_ffffffi_m m_FitMesh_ffffffi;
	_m_minib3d_TMesh_ScaleMesh_fff_m m_ScaleMesh_fff;
	_m_minib3d_TMesh_RotateMesh_fff_m m_RotateMesh_fff;
	_m_minib3d_TMesh_PositionMesh_fff_m m_PositionMesh_fff;
	_m_minib3d_TMesh_UpdateNormals_m m_UpdateNormals;
	_m_minib3d_TMesh_CreateSurface_TTBrush_m m_CreateSurface_TTBrush;
	_m_minib3d_TMesh_MeshWidth_m m_MeshWidth;
	_m_minib3d_TMesh_MeshHeight_m m_MeshHeight;
	_m_minib3d_TMesh_MeshDepth_m m_MeshDepth;
	_m_minib3d_TMesh_CountSurfaces_m m_CountSurfaces;
	_m_minib3d_TMesh_GetSurface_i_m m_GetSurface_i;
	_m_minib3d_TMesh_FindSurface_TTBrush_m m_FindSurface_TTBrush;
	_m_minib3d_TMesh_CountVertices_m m_CountVertices;
	_m_minib3d_TMesh_CountTriangles_m m_CountTriangles;
	_m_minib3d_TMesh_CopyBonesList_i_TTEntityvaTTBonevi_f f_CopyBonesList_i_TTEntityvaTTBonevi;
	_m_minib3d_TMesh_CollapseAnimMesh_TTMesh_m m_CollapseAnimMesh_TTMesh;
	_m_minib3d_TMesh_CollapseChildren_TTMesh_TTEntityTTMesh_f f_CollapseChildren_TTMesh_TTEntityTTMesh;
	_m_minib3d_TMesh_TransformMesh_TTMatrix_m m_TransformMesh_TTMatrix;
	_m_minib3d_TMesh_GetBounds_m m_GetBounds;
	_m_minib3d_TMesh_Alpha_m m_Alpha;
	_m_minib3d_TSprite_CreateSprite_TTSprite_TTEntity_f f_CreateSprite_TTSprite_TTEntity;
	_m_minib3d_TSprite_LoadSprite_TTSprite_SiTTEntity_f f_LoadSprite_TTSprite_SiTTEntity;
	_m_minib3d_TSprite_RotateSprite_f_m m_RotateSprite_f;
	_m_minib3d_TSprite_ScaleSprite_ff_m m_ScaleSprite_ff;
	_m_minib3d_TSprite_HandleSprite_ff_m m_HandleSprite_ff;
	_m_minib3d_TSprite_SpriteViewMode_i_m m_SpriteViewMode_i;
};

struct _m_minib3d_TSprite_obj {
	struct BBClass__m_minib3d_TSprite* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
	BBFLOAT __m_minib3d_tmesh_min_x;
	BBFLOAT __m_minib3d_tmesh_min_y;
	BBFLOAT __m_minib3d_tmesh_min_z;
	BBFLOAT __m_minib3d_tmesh_max_x;
	BBFLOAT __m_minib3d_tmesh_max_y;
	BBFLOAT __m_minib3d_tmesh_max_z;
	BBINT __m_minib3d_tmesh_no_surfs;
	struct brl_linkedlist_TList_obj* __m_minib3d_tmesh_surf_list;
	struct brl_linkedlist_TList_obj* __m_minib3d_tmesh_anim_surf_list;
	BBINT __m_minib3d_tmesh_no_bones;
	BBARRAY __m_minib3d_tmesh_bones;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tmesh_mat_sp;
	struct _m_minib3d_TColTree_obj* __m_minib3d_tmesh_col_tree;
	BBINT __m_minib3d_tmesh_reset_bounds;
	BBFLOAT __m_minib3d_tsprite_angle;
	BBFLOAT __m_minib3d_tsprite_scale_x;
	BBFLOAT __m_minib3d_tsprite_scale_y;
	BBFLOAT __m_minib3d_tsprite_handle_x;
	BBFLOAT __m_minib3d_tsprite_handle_y;
	BBINT __m_minib3d_tsprite_view_mode;
};
extern struct BBClass__m_minib3d_TSprite _m_minib3d_TSprite;
void __m_minib3d_TBone_New(struct _m_minib3d_TBone_obj* o);
void __m_minib3d_TBone_Delete(struct _m_minib3d_TBone_obj* o);
typedef struct _m_minib3d_TBone_obj* (*_m_minib3d_TBone_CopyEntity_TTEntity_m)(struct _m_minib3d_TBone_obj*,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TBone_obj* __m_minib3d_TBone_CopyEntity_TTEntity(struct _m_minib3d_TBone_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TBone_FreeEntity_m)(struct _m_minib3d_TBone_obj*);
BBINT __m_minib3d_TBone_FreeEntity(struct _m_minib3d_TBone_obj*);
typedef BBINT (*_m_minib3d_TBone_UpdateBoneChildren_i_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TBone_UpdateBoneChildren_i_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TBone_Update_m)(struct _m_minib3d_TBone_obj*);
BBINT __m_minib3d_TBone_Update(struct _m_minib3d_TBone_obj*);
struct BBClass__m_minib3d_TBone {
	struct BBClass__m_minib3d_TEntity*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TBone_CopyEntity_TTEntity_m m_CopyEntity_TTEntity;
	_m_minib3d_TBone_Update_m m_Update;
	_m_minib3d_TBone_FreeEntity_m m_FreeEntity;
	_m_minib3d_TEntity_PositionEntity_fffi_m m_PositionEntity_fffi;
	_m_minib3d_TEntity_MoveEntity_fff_m m_MoveEntity_fff;
	_m_minib3d_TEntity_TranslateEntity_fffi_m m_TranslateEntity_fffi;
	_m_minib3d_TEntity_ScaleEntity_fffi_m m_ScaleEntity_fffi;
	_m_minib3d_TEntity_RotateEntity_fffi_m m_RotateEntity_fffi;
	_m_minib3d_TEntity_TurnEntity_fffi_m m_TurnEntity_fffi;
	_m_minib3d_TEntity_PointEntity_TTEntityf_m m_PointEntity_TTEntityf;
	_m_minib3d_TEntity_LoadAnimSeq_S_m m_LoadAnimSeq_S;
	_m_minib3d_TEntity_ExtractAnimSeq_iii_m m_ExtractAnimSeq_iii;
	_m_minib3d_TEntity_Animate_ifii_m m_Animate_ifii;
	_m_minib3d_TEntity_SetAnimTime_fi_m m_SetAnimTime_fi;
	_m_minib3d_TEntity_AnimSeq_m m_AnimSeq;
	_m_minib3d_TEntity_AnimLength_m m_AnimLength;
	_m_minib3d_TEntity_AnimTime_m m_AnimTime;
	_m_minib3d_TEntity_Animating_m m_Animating;
	_m_minib3d_TEntity_EntityColor_fff_m m_EntityColor_fff;
	_m_minib3d_TEntity_EntityAlpha_f_m m_EntityAlpha_f;
	_m_minib3d_TEntity_EntityShininess_f_m m_EntityShininess_f;
	_m_minib3d_TEntity_EntityTexture_TTTextureii_m m_EntityTexture_TTTextureii;
	_m_minib3d_TEntity_EntityBlend_i_m m_EntityBlend_i;
	_m_minib3d_TEntity_EntityFX_i_m m_EntityFX_i;
	_m_minib3d_TEntity_EntityAutoFade_ff_m m_EntityAutoFade_ff;
	_m_minib3d_TEntity_PaintEntity_TTBrush_m m_PaintEntity_TTBrush;
	_m_minib3d_TEntity_EntityOrder_i_m m_EntityOrder_i;
	_m_minib3d_TEntity_ShowEntity_m m_ShowEntity;
	_m_minib3d_TEntity_HideEntity_m m_HideEntity;
	_m_minib3d_TEntity_Hidden_m m_Hidden;
	_m_minib3d_TEntity_NameEntity_S_m m_NameEntity_S;
	_m_minib3d_TEntity_EntityParent_TTEntityi_m m_EntityParent_TTEntityi;
	_m_minib3d_TEntity_GetParent_m m_GetParent;
	_m_minib3d_TEntity_EntityX_i_m m_EntityX_i;
	_m_minib3d_TEntity_EntityY_i_m m_EntityY_i;
	_m_minib3d_TEntity_EntityZ_i_m m_EntityZ_i;
	_m_minib3d_TEntity_EntityPitch_i_m m_EntityPitch_i;
	_m_minib3d_TEntity_EntityYaw_i_m m_EntityYaw_i;
	_m_minib3d_TEntity_EntityRoll_i_m m_EntityRoll_i;
	_m_minib3d_TEntity_EntityClass_m m_EntityClass;
	_m_minib3d_TEntity_EntityName_m m_EntityName;
	_m_minib3d_TEntity_CountChildren_m m_CountChildren;
	_m_minib3d_TEntity_GetChild_i_m m_GetChild_i;
	_m_minib3d_TEntity_FindChild_S_m m_FindChild_S;
	_m_minib3d_TEntity_EntityPick_f_m m_EntityPick_f;
	_m_minib3d_TEntity_LinePick_fffffff_m m_LinePick_fffffff;
	_m_minib3d_TEntity_EntityVisible_TTEntityTTEntity_m m_EntityVisible_TTEntityTTEntity;
	_m_minib3d_TEntity_EntityDistance_TTEntity_m m_EntityDistance_TTEntity;
	_m_minib3d_TEntity_DeltaYaw_TTEntity_m m_DeltaYaw_TTEntity;
	_m_minib3d_TEntity_DeltaPitch_TTEntity_m m_DeltaPitch_TTEntity;
	_m_minib3d_TEntity_TFormPoint_i_fffTTEntityTTEntity_f f_TFormPoint_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormVector_i_fffTTEntityTTEntity_f f_TFormVector_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormNormal_i_fffTTEntityTTEntity_f f_TFormNormal_i_fffTTEntityTTEntity;
	_m_minib3d_TEntity_TFormedX_f_f f_TFormedX_f;
	_m_minib3d_TEntity_TFormedY_f_f f_TFormedY_f;
	_m_minib3d_TEntity_TFormedZ_f_f f_TFormedZ_f;
	_m_minib3d_TEntity_GetMatElement_ii_m m_GetMatElement_ii;
	_m_minib3d_TEntity_ResetEntity_m m_ResetEntity;
	_m_minib3d_TEntity_EntityRadius_ff_m m_EntityRadius_ff;
	_m_minib3d_TEntity_EntityBox_ffffff_m m_EntityBox_ffffff;
	_m_minib3d_TEntity_EntityType_ii_m m_EntityType_ii;
	_m_minib3d_TEntity_EntityPickMode_ii_m m_EntityPickMode_ii;
	_m_minib3d_TEntity_EntityCollided_i_m m_EntityCollided_i;
	_m_minib3d_TEntity_CountCollisions_m m_CountCollisions;
	_m_minib3d_TEntity_CollisionX_i_m m_CollisionX_i;
	_m_minib3d_TEntity_CollisionY_i_m m_CollisionY_i;
	_m_minib3d_TEntity_CollisionZ_i_m m_CollisionZ_i;
	_m_minib3d_TEntity_CollisionNX_i_m m_CollisionNX_i;
	_m_minib3d_TEntity_CollisionNY_i_m m_CollisionNY_i;
	_m_minib3d_TEntity_CollisionNZ_i_m m_CollisionNZ_i;
	_m_minib3d_TEntity_CollisionTime_i_m m_CollisionTime_i;
	_m_minib3d_TEntity_CollisionEntity_i_m m_CollisionEntity_i;
	_m_minib3d_TEntity_CollisionSurface_i_m m_CollisionSurface_i;
	_m_minib3d_TEntity_CollisionTriangle_i_m m_CollisionTriangle_i;
	_m_minib3d_TEntity_GetEntityType_m m_GetEntityType;
	_m_minib3d_TEntity_MeshCullRadius_f_m m_MeshCullRadius_f;
	_m_minib3d_TEntity_EntityScaleX_i_m m_EntityScaleX_i;
	_m_minib3d_TEntity_EntityScaleY_i_m m_EntityScaleY_i;
	_m_minib3d_TEntity_EntityScaleZ_i_m m_EntityScaleZ_i;
	_m_minib3d_TEntity_BoundingSphereNew_vfvfvfvf_m m_BoundingSphereNew_vfvfvfvf;
	_m_minib3d_TEntity_CountAllChildren_i_TTEntityi_f f_CountAllChildren_i_TTEntityi;
	_m_minib3d_TEntity_GetChildFromAll_iviTTEntity_m m_GetChildFromAll_iviTTEntity;
	_m_minib3d_TEntity_UpdateMat_i_m m_UpdateMat_i;
	_m_minib3d_TEntity_AddParent_TTEntity_m m_AddParent_TTEntity;
	_m_minib3d_TEntity_UpdateChildren_i_TTEntity_f f_UpdateChildren_i_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared0_TTEntity_m m_EntityDistanceSquared0_TTEntity;
	_m_minib3d_TEntity_EntityDistanceSquared_TTEntity_m m_EntityDistanceSquared_TTEntity;
	_m_minib3d_TEntity_EntityListAdd_TTList_m m_EntityListAdd_TTList;
	_m_minib3d_TBone_UpdateBoneChildren_i_TTEntity_f f_UpdateBoneChildren_i_TTEntity;
};

struct _m_minib3d_TBone_obj {
	struct BBClass__m_minib3d_TBone* clas;
	struct brl_linkedlist_TList_obj* __m_minib3d_tentity_child_list;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tentity_parent;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tentity_mat;
	BBFLOAT __m_minib3d_tentity_px;
	BBFLOAT __m_minib3d_tentity_py;
	BBFLOAT __m_minib3d_tentity_pz;
	BBFLOAT __m_minib3d_tentity_sx;
	BBFLOAT __m_minib3d_tentity_sy;
	BBFLOAT __m_minib3d_tentity_sz;
	BBFLOAT __m_minib3d_tentity_rx;
	BBFLOAT __m_minib3d_tentity_ry;
	BBFLOAT __m_minib3d_tentity_rz;
	BBFLOAT __m_minib3d_tentity_qw;
	BBFLOAT __m_minib3d_tentity_qx;
	BBFLOAT __m_minib3d_tentity_qy;
	BBFLOAT __m_minib3d_tentity_qz;
	BBSTRING __m_minib3d_tentity_name;
	BBSTRING __m_minib3d_tentity_class;
	BBINT __m_minib3d_tentity_hide;
	BBINT __m_minib3d_tentity_order;
	BBFLOAT __m_minib3d_tentity_alpha_order;
	BBINT __m_minib3d_tentity_auto_fade;
	BBFLOAT __m_minib3d_tentity_fade_near;
	BBFLOAT __m_minib3d_tentity_fade_far;
	BBFLOAT __m_minib3d_tentity_fade_alpha;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tentity_brush;
	BBFLOAT __m_minib3d_tentity_cull_radius;
	BBFLOAT __m_minib3d_tentity_radius_x;
	BBFLOAT __m_minib3d_tentity_radius_y;
	BBFLOAT __m_minib3d_tentity_box_x;
	BBFLOAT __m_minib3d_tentity_box_y;
	BBFLOAT __m_minib3d_tentity_box_z;
	BBFLOAT __m_minib3d_tentity_box_w;
	BBFLOAT __m_minib3d_tentity_box_h;
	BBFLOAT __m_minib3d_tentity_box_d;
	BBINT __m_minib3d_tentity_collision_type;
	BBINT __m_minib3d_tentity_no_collisions;
	BBARRAY __m_minib3d_tentity_collision;
	BBINT __m_minib3d_tentity_pick_mode;
	BBINT __m_minib3d_tentity_obscurer;
	BBINT __m_minib3d_tentity_anim;
	BBINT __m_minib3d_tentity_anim_render;
	BBINT __m_minib3d_tentity_anim_mode;
	BBFLOAT __m_minib3d_tentity_anim_time;
	BBFLOAT __m_minib3d_tentity_anim_speed;
	BBINT __m_minib3d_tentity_anim_seq;
	BBINT __m_minib3d_tentity_anim_trans;
	BBINT __m_minib3d_tentity_anim_dir;
	BBARRAY __m_minib3d_tentity_anim_seqs_first;
	BBARRAY __m_minib3d_tentity_anim_seqs_last;
	BBINT __m_minib3d_tentity_no_seqs;
	BBINT __m_minib3d_tentity_anim_update;
	BBFLOAT __m_minib3d_tentity_old_x;
	BBFLOAT __m_minib3d_tentity_old_y;
	BBFLOAT __m_minib3d_tentity_old_z;
	struct brl_linkedlist_TLink_obj* __m_minib3d_tentity_link;
	BBFLOAT __m_minib3d_tbone_n_px;
	BBFLOAT __m_minib3d_tbone_n_py;
	BBFLOAT __m_minib3d_tbone_n_pz;
	BBFLOAT __m_minib3d_tbone_n_sx;
	BBFLOAT __m_minib3d_tbone_n_sy;
	BBFLOAT __m_minib3d_tbone_n_sz;
	BBFLOAT __m_minib3d_tbone_n_rx;
	BBFLOAT __m_minib3d_tbone_n_ry;
	BBFLOAT __m_minib3d_tbone_n_rz;
	BBFLOAT __m_minib3d_tbone_n_qw;
	BBFLOAT __m_minib3d_tbone_n_qx;
	BBFLOAT __m_minib3d_tbone_n_qy;
	BBFLOAT __m_minib3d_tbone_n_qz;
	struct _m_minib3d_TAnimationKeys_obj* __m_minib3d_tbone_keys;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tbone_mat2;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tbone_inv_mat;
	struct _m_minib3d_TMatrix_obj* __m_minib3d_tbone_tform_mat;
	BBFLOAT __m_minib3d_tbone_kx;
	BBFLOAT __m_minib3d_tbone_ky;
	BBFLOAT __m_minib3d_tbone_kz;
	BBFLOAT __m_minib3d_tbone_kqw;
	BBFLOAT __m_minib3d_tbone_kqx;
	BBFLOAT __m_minib3d_tbone_kqy;
	BBFLOAT __m_minib3d_tbone_kqz;
};
extern struct BBClass__m_minib3d_TBone _m_minib3d_TBone;
void __m_minib3d_TSurface_New(struct _m_minib3d_TSurface_obj* o);
void __m_minib3d_TSurface_Delete(struct _m_minib3d_TSurface_obj* o);
BBINT __m_minib3d_TSurface_Compare(struct _m_minib3d_TSurface_obj* o, BBOBJECT otherObject);
typedef struct _m_minib3d_TSurface_obj* (*_m_minib3d_TSurface_Copy_m)(struct _m_minib3d_TSurface_obj*);
struct _m_minib3d_TSurface_obj* __m_minib3d_TSurface_Copy(struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TSurface_PaintSurface_TTBrush_m)(struct _m_minib3d_TSurface_obj*,struct _m_minib3d_TBrush_obj*);
BBINT __m_minib3d_TSurface_PaintSurface_TTBrush(struct _m_minib3d_TSurface_obj*,struct _m_minib3d_TBrush_obj*);
typedef BBINT (*_m_minib3d_TSurface_ClearSurface_ii_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
BBINT __m_minib3d_TSurface_ClearSurface_ii(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TSurface_AddVertex_ffffff_m)(struct _m_minib3d_TSurface_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TSurface_AddVertex_ffffff(struct _m_minib3d_TSurface_obj*,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TSurface_AddTriangle_iii_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBINT,BBINT);
BBINT __m_minib3d_TSurface_AddTriangle_iii(struct _m_minib3d_TSurface_obj*,BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TSurface_CountVertices_m)(struct _m_minib3d_TSurface_obj*);
BBINT __m_minib3d_TSurface_CountVertices(struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TSurface_CountTriangles_m)(struct _m_minib3d_TSurface_obj*);
BBINT __m_minib3d_TSurface_CountTriangles(struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TSurface_VertexCoords_ifff_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TSurface_VertexCoords_ifff(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TSurface_VertexColor_iffff_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TSurface_VertexColor_iffff(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TSurface_VertexNormal_ifff_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TSurface_VertexNormal_ifff(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TSurface_VertexTexCoords_ifffi_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
BBINT __m_minib3d_TSurface_VertexTexCoords_ifffi(struct _m_minib3d_TSurface_obj*,BBINT,BBFLOAT,BBFLOAT,BBFLOAT,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexX_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexX_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexY_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexY_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexZ_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexZ_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexRed_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexRed_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexGreen_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexGreen_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexBlue_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexBlue_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexAlpha_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexAlpha_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexNX_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexNX_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexNY_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexNY_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexNZ_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexNZ_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexU_ii_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexU_ii(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexV_ii_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexV_ii(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_VertexW_ii_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
BBFLOAT __m_minib3d_TSurface_VertexW_ii(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TSurface_TriangleVertex_ii_m)(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
BBINT __m_minib3d_TSurface_TriangleVertex_ii(struct _m_minib3d_TSurface_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TSurface_UpdateNormals_m)(struct _m_minib3d_TSurface_obj*);
BBINT __m_minib3d_TSurface_UpdateNormals(struct _m_minib3d_TSurface_obj*);
typedef BBFLOAT (*_m_minib3d_TSurface_TriangleNX_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_TriangleNX_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_TriangleNY_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_TriangleNY_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBFLOAT (*_m_minib3d_TSurface_TriangleNZ_i_m)(struct _m_minib3d_TSurface_obj*,BBINT);
BBFLOAT __m_minib3d_TSurface_TriangleNZ_i(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBINT (*_m_minib3d_TSurface_UpdateVBO_m)(struct _m_minib3d_TSurface_obj*);
BBINT __m_minib3d_TSurface_UpdateVBO(struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TSurface_FreeVBO_m)(struct _m_minib3d_TSurface_obj*);
BBINT __m_minib3d_TSurface_FreeVBO(struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TSurface_RemoveTri_i_TTSurfacei_f)(struct _m_minib3d_TSurface_obj*,BBINT);
BBINT _m_minib3d_TSurface_RemoveTri_i_TTSurfacei(struct _m_minib3d_TSurface_obj*,BBINT);
typedef BBINT (*_m_minib3d_TSurface_RemoveVerts_i_TTSurface_f)(struct _m_minib3d_TSurface_obj*);
BBINT _m_minib3d_TSurface_RemoveVerts_i_TTSurface(struct _m_minib3d_TSurface_obj*);
struct BBClass__m_minib3d_TSurface {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TSurface_Copy_m m_Copy;
	_m_minib3d_TSurface_PaintSurface_TTBrush_m m_PaintSurface_TTBrush;
	_m_minib3d_TSurface_ClearSurface_ii_m m_ClearSurface_ii;
	_m_minib3d_TSurface_AddVertex_ffffff_m m_AddVertex_ffffff;
	_m_minib3d_TSurface_AddTriangle_iii_m m_AddTriangle_iii;
	_m_minib3d_TSurface_CountVertices_m m_CountVertices;
	_m_minib3d_TSurface_CountTriangles_m m_CountTriangles;
	_m_minib3d_TSurface_VertexCoords_ifff_m m_VertexCoords_ifff;
	_m_minib3d_TSurface_VertexColor_iffff_m m_VertexColor_iffff;
	_m_minib3d_TSurface_VertexNormal_ifff_m m_VertexNormal_ifff;
	_m_minib3d_TSurface_VertexTexCoords_ifffi_m m_VertexTexCoords_ifffi;
	_m_minib3d_TSurface_VertexX_i_m m_VertexX_i;
	_m_minib3d_TSurface_VertexY_i_m m_VertexY_i;
	_m_minib3d_TSurface_VertexZ_i_m m_VertexZ_i;
	_m_minib3d_TSurface_VertexRed_i_m m_VertexRed_i;
	_m_minib3d_TSurface_VertexGreen_i_m m_VertexGreen_i;
	_m_minib3d_TSurface_VertexBlue_i_m m_VertexBlue_i;
	_m_minib3d_TSurface_VertexAlpha_i_m m_VertexAlpha_i;
	_m_minib3d_TSurface_VertexNX_i_m m_VertexNX_i;
	_m_minib3d_TSurface_VertexNY_i_m m_VertexNY_i;
	_m_minib3d_TSurface_VertexNZ_i_m m_VertexNZ_i;
	_m_minib3d_TSurface_VertexU_ii_m m_VertexU_ii;
	_m_minib3d_TSurface_VertexV_ii_m m_VertexV_ii;
	_m_minib3d_TSurface_VertexW_ii_m m_VertexW_ii;
	_m_minib3d_TSurface_TriangleVertex_ii_m m_TriangleVertex_ii;
	_m_minib3d_TSurface_UpdateNormals_m m_UpdateNormals;
	_m_minib3d_TSurface_TriangleNX_i_m m_TriangleNX_i;
	_m_minib3d_TSurface_TriangleNY_i_m m_TriangleNY_i;
	_m_minib3d_TSurface_TriangleNZ_i_m m_TriangleNZ_i;
	_m_minib3d_TSurface_UpdateVBO_m m_UpdateVBO;
	_m_minib3d_TSurface_FreeVBO_m m_FreeVBO;
	_m_minib3d_TSurface_RemoveTri_i_TTSurfacei_f f_RemoveTri_i_TTSurfacei;
	_m_minib3d_TSurface_RemoveVerts_i_TTSurface_f f_RemoveVerts_i_TTSurface;
};

struct _m_minib3d_TSurface_obj {
	struct BBClass__m_minib3d_TSurface* clas;
	BBINT __m_minib3d_tsurface_no_verts;
	BBINT __m_minib3d_tsurface_no_tris;
	BBARRAY __m_minib3d_tsurface_tris;
	BBARRAY __m_minib3d_tsurface_vert_coords;
	BBARRAY __m_minib3d_tsurface_vert_tex_coords0;
	BBARRAY __m_minib3d_tsurface_vert_tex_coords1;
	BBARRAY __m_minib3d_tsurface_vert_norm;
	BBARRAY __m_minib3d_tsurface_vert_col;
	BBARRAY __m_minib3d_tsurface_vert_bone1_no;
	BBARRAY __m_minib3d_tsurface_vert_bone2_no;
	BBARRAY __m_minib3d_tsurface_vert_bone3_no;
	BBARRAY __m_minib3d_tsurface_vert_bone4_no;
	BBARRAY __m_minib3d_tsurface_vert_weight1;
	BBARRAY __m_minib3d_tsurface_vert_weight2;
	BBARRAY __m_minib3d_tsurface_vert_weight3;
	BBARRAY __m_minib3d_tsurface_vert_weight4;
	struct _m_minib3d_TBrush_obj* __m_minib3d_tsurface_brush;
	BBARRAY __m_minib3d_tsurface_vbo_id;
	BBINT __m_minib3d_tsurface_vert_array_size;
	BBINT __m_minib3d_tsurface_tri_array_size;
	BBINT __m_minib3d_tsurface_vmin;
	BBINT __m_minib3d_tsurface_vmax;
	BBINT __m_minib3d_tsurface_reset_vbo;
	BBINT __m_minib3d_tsurface_alpha_enable;
};
extern struct BBClass__m_minib3d_TSurface _m_minib3d_TSurface;
void __m_minib3d_TTexture_New(struct _m_minib3d_TTexture_obj* o);
void __m_minib3d_TTexture_Delete(struct _m_minib3d_TTexture_obj* o);
typedef BBINT (*_m_minib3d_TTexture_FreeTexture_m)(struct _m_minib3d_TTexture_obj*);
BBINT __m_minib3d_TTexture_FreeTexture(struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_CreateTexture_TTTexture_iiiiTTTexture_f)(BBINT,BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_CreateTexture_TTTexture_iiiiTTTexture(BBINT,BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_LoadTexture_TTTexture_SiTTTexture_f)(BBSTRING,BBINT,struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_LoadTexture_TTTexture_SiTTTexture(BBSTRING,BBINT,struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_LoadAnimTexture_TTTexture_SiiiiiTTTexture_f)(BBSTRING,BBINT,BBINT,BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_LoadAnimTexture_TTTexture_SiiiiiTTTexture(BBSTRING,BBINT,BBINT,BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_LoadPixmap_TTTexture_TTPixmapiiiiiTTTexture_f)(struct brl_pixmap_TPixmap_obj*,BBINT,BBINT,BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_LoadPixmap_TTTexture_TTPixmapiiiiiTTTexture(struct brl_pixmap_TPixmap_obj*,BBINT,BBINT,BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_CreateCubeMapTexture_TTTexture_iiiTTTexture_f)(BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_CreateCubeMapTexture_TTTexture_iiiTTTexture(BBINT,BBINT,BBINT,struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_LoadCubeMapTexture_TTTexture_SiTTTexture_f)(BBSTRING,BBINT,struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_LoadCubeMapTexture_TTTexture_SiTTTexture(BBSTRING,BBINT,struct _m_minib3d_TTexture_obj*);
typedef BBINT (*_m_minib3d_TTexture_TextureBlend_i_m)(struct _m_minib3d_TTexture_obj*,BBINT);
BBINT __m_minib3d_TTexture_TextureBlend_i(struct _m_minib3d_TTexture_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_TextureCoords_i_m)(struct _m_minib3d_TTexture_obj*,BBINT);
BBINT __m_minib3d_TTexture_TextureCoords_i(struct _m_minib3d_TTexture_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_ScaleTexture_ff_m)(struct _m_minib3d_TTexture_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TTexture_ScaleTexture_ff(struct _m_minib3d_TTexture_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TTexture_PositionTexture_ff_m)(struct _m_minib3d_TTexture_obj*,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TTexture_PositionTexture_ff(struct _m_minib3d_TTexture_obj*,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TTexture_RotateTexture_f_m)(struct _m_minib3d_TTexture_obj*,BBFLOAT);
BBINT __m_minib3d_TTexture_RotateTexture_f(struct _m_minib3d_TTexture_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TTexture_TextureWidth_m)(struct _m_minib3d_TTexture_obj*);
BBINT __m_minib3d_TTexture_TextureWidth(struct _m_minib3d_TTexture_obj*);
typedef BBINT (*_m_minib3d_TTexture_TextureHeight_m)(struct _m_minib3d_TTexture_obj*);
BBINT __m_minib3d_TTexture_TextureHeight(struct _m_minib3d_TTexture_obj*);
typedef BBSTRING (*_m_minib3d_TTexture_TextureName_m)(struct _m_minib3d_TTexture_obj*);
BBSTRING __m_minib3d_TTexture_TextureName(struct _m_minib3d_TTexture_obj*);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_GetBrushTexture_TTTexture_TTBrushi_f)(struct _m_minib3d_TBrush_obj*,BBINT);
struct _m_minib3d_TTexture_obj* _m_minib3d_TTexture_GetBrushTexture_TTTexture_TTBrushi(struct _m_minib3d_TBrush_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_ClearTextureFilters_i_f)();
BBINT _m_minib3d_TTexture_ClearTextureFilters_i();
typedef BBINT (*_m_minib3d_TTexture_TextureFilter_i_Si_f)(BBSTRING,BBINT);
BBINT _m_minib3d_TTexture_TextureFilter_i_Si(BBSTRING,BBINT);
typedef BBINT (*_m_minib3d_TTexture_SetCubeFace_i_m)(struct _m_minib3d_TTexture_obj*,BBINT);
BBINT __m_minib3d_TTexture_SetCubeFace_i(struct _m_minib3d_TTexture_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_SetCubeMode_i_m)(struct _m_minib3d_TTexture_obj*,BBINT);
BBINT __m_minib3d_TTexture_SetCubeMode_i(struct _m_minib3d_TTexture_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_BackBufferToTex_iii_m)(struct _m_minib3d_TTexture_obj*,BBINT,BBINT,BBINT);
BBINT __m_minib3d_TTexture_BackBufferToTex_iii(struct _m_minib3d_TTexture_obj*,BBINT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TTexture_CountMipmaps_m)(struct _m_minib3d_TTexture_obj*);
BBINT __m_minib3d_TTexture_CountMipmaps(struct _m_minib3d_TTexture_obj*);
typedef BBINT (*_m_minib3d_TTexture_MipmapWidth_i_m)(struct _m_minib3d_TTexture_obj*,BBINT);
BBINT __m_minib3d_TTexture_MipmapWidth_i(struct _m_minib3d_TTexture_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_MipmapHeight_i_m)(struct _m_minib3d_TTexture_obj*,BBINT);
BBINT __m_minib3d_TTexture_MipmapHeight_i(struct _m_minib3d_TTexture_obj*,BBINT);
typedef BBINT (*_m_minib3d_TTexture_FileFind_i_vS_f)(BBSTRING*);
BBINT _m_minib3d_TTexture_FileFind_i_vS(BBSTRING*);
typedef BBSTRING (*_m_minib3d_TTexture_FileAbs_S_S_f)(BBSTRING);
BBSTRING _m_minib3d_TTexture_FileAbs_S_S(BBSTRING);
typedef struct _m_minib3d_TTexture_obj* (*_m_minib3d_TTexture_TexInList_m)(struct _m_minib3d_TTexture_obj*);
struct _m_minib3d_TTexture_obj* __m_minib3d_TTexture_TexInList(struct _m_minib3d_TTexture_obj*);
typedef BBINT (*_m_minib3d_TTexture_FilterFlags_m)(struct _m_minib3d_TTexture_obj*);
BBINT __m_minib3d_TTexture_FilterFlags(struct _m_minib3d_TTexture_obj*);
typedef struct brl_pixmap_TPixmap_obj* (*_m_minib3d_TTexture_AdjustPixmap_TTPixmap_TTPixmap_f)(struct brl_pixmap_TPixmap_obj*);
struct brl_pixmap_TPixmap_obj* _m_minib3d_TTexture_AdjustPixmap_TTPixmap_TTPixmap(struct brl_pixmap_TPixmap_obj*);
typedef BBINT (*_m_minib3d_TTexture_Pow2Size_i_i_f)(BBINT);
BBINT _m_minib3d_TTexture_Pow2Size_i_i(BBINT);
typedef struct brl_pixmap_TPixmap_obj* (*_m_minib3d_TTexture_ApplyAlpha_TTPixmap_TTPixmap_f)(struct brl_pixmap_TPixmap_obj*);
struct brl_pixmap_TPixmap_obj* _m_minib3d_TTexture_ApplyAlpha_TTPixmap_TTPixmap(struct brl_pixmap_TPixmap_obj*);
struct BBClass__m_minib3d_TTexture {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TTexture_FreeTexture_m m_FreeTexture;
	_m_minib3d_TTexture_CreateTexture_TTTexture_iiiiTTTexture_f f_CreateTexture_TTTexture_iiiiTTTexture;
	_m_minib3d_TTexture_LoadTexture_TTTexture_SiTTTexture_f f_LoadTexture_TTTexture_SiTTTexture;
	_m_minib3d_TTexture_LoadAnimTexture_TTTexture_SiiiiiTTTexture_f f_LoadAnimTexture_TTTexture_SiiiiiTTTexture;
	_m_minib3d_TTexture_LoadPixmap_TTTexture_TTPixmapiiiiiTTTexture_f f_LoadPixmap_TTTexture_TTPixmapiiiiiTTTexture;
	_m_minib3d_TTexture_CreateCubeMapTexture_TTTexture_iiiTTTexture_f f_CreateCubeMapTexture_TTTexture_iiiTTTexture;
	_m_minib3d_TTexture_LoadCubeMapTexture_TTTexture_SiTTTexture_f f_LoadCubeMapTexture_TTTexture_SiTTTexture;
	_m_minib3d_TTexture_TextureBlend_i_m m_TextureBlend_i;
	_m_minib3d_TTexture_TextureCoords_i_m m_TextureCoords_i;
	_m_minib3d_TTexture_ScaleTexture_ff_m m_ScaleTexture_ff;
	_m_minib3d_TTexture_PositionTexture_ff_m m_PositionTexture_ff;
	_m_minib3d_TTexture_RotateTexture_f_m m_RotateTexture_f;
	_m_minib3d_TTexture_TextureWidth_m m_TextureWidth;
	_m_minib3d_TTexture_TextureHeight_m m_TextureHeight;
	_m_minib3d_TTexture_TextureName_m m_TextureName;
	_m_minib3d_TTexture_GetBrushTexture_TTTexture_TTBrushi_f f_GetBrushTexture_TTTexture_TTBrushi;
	_m_minib3d_TTexture_ClearTextureFilters_i_f f_ClearTextureFilters_i;
	_m_minib3d_TTexture_TextureFilter_i_Si_f f_TextureFilter_i_Si;
	_m_minib3d_TTexture_SetCubeFace_i_m m_SetCubeFace_i;
	_m_minib3d_TTexture_SetCubeMode_i_m m_SetCubeMode_i;
	_m_minib3d_TTexture_BackBufferToTex_iii_m m_BackBufferToTex_iii;
	_m_minib3d_TTexture_CountMipmaps_m m_CountMipmaps;
	_m_minib3d_TTexture_MipmapWidth_i_m m_MipmapWidth_i;
	_m_minib3d_TTexture_MipmapHeight_i_m m_MipmapHeight_i;
	_m_minib3d_TTexture_FileFind_i_vS_f f_FileFind_i_vS;
	_m_minib3d_TTexture_FileAbs_S_S_f f_FileAbs_S_S;
	_m_minib3d_TTexture_TexInList_m m_TexInList;
	_m_minib3d_TTexture_FilterFlags_m m_FilterFlags;
	_m_minib3d_TTexture_AdjustPixmap_TTPixmap_TTPixmap_f f_AdjustPixmap_TTPixmap_TTPixmap;
	_m_minib3d_TTexture_Pow2Size_i_i_f f_Pow2Size_i_i;
	_m_minib3d_TTexture_ApplyAlpha_TTPixmap_TTPixmap_f f_ApplyAlpha_TTPixmap_TTPixmap;
};

struct _m_minib3d_TTexture_obj {
	struct BBClass__m_minib3d_TTexture* clas;
	BBSTRING __m_minib3d_ttexture_file;
	BBINT __m_minib3d_ttexture_flags;
	BBINT __m_minib3d_ttexture_blend;
	BBINT __m_minib3d_ttexture_coords;
	BBFLOAT __m_minib3d_ttexture_u_scale;
	BBFLOAT __m_minib3d_ttexture_v_scale;
	BBFLOAT __m_minib3d_ttexture_u_pos;
	BBFLOAT __m_minib3d_ttexture_v_pos;
	BBFLOAT __m_minib3d_ttexture_angle;
	BBSTRING __m_minib3d_ttexture_file_abs;
	BBINT __m_minib3d_ttexture_width;
	BBINT __m_minib3d_ttexture_height;
	struct brl_pixmap_TPixmap_obj* __m_minib3d_ttexture_pixmap;
	BBARRAY __m_minib3d_ttexture_gltex;
	BBARRAY __m_minib3d_ttexture_cube_pixmap;
	BBINT __m_minib3d_ttexture_no_frames;
	BBINT __m_minib3d_ttexture_no_mipmaps;
	BBINT __m_minib3d_ttexture_cube_face;
	BBINT __m_minib3d_ttexture_cube_mode;
};
extern struct BBClass__m_minib3d_TTexture _m_minib3d_TTexture;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TTexture_tex_list;
void __m_minib3d_TTextureFilter_New(struct _m_minib3d_TTextureFilter_obj* o);
struct BBClass__m_minib3d_TTextureFilter {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
};

struct _m_minib3d_TTextureFilter_obj {
	struct BBClass__m_minib3d_TTextureFilter* clas;
	BBSTRING __m_minib3d_ttexturefilter_text;
	BBINT __m_minib3d_ttexturefilter_flags;
};
extern struct BBClass__m_minib3d_TTextureFilter _m_minib3d_TTextureFilter;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TTextureFilter_filter_list;
void __m_minib3d_TBrush_New(struct _m_minib3d_TBrush_obj* o);
void __m_minib3d_TBrush_Delete(struct _m_minib3d_TBrush_obj* o);
typedef struct _m_minib3d_TBrush_obj* (*_m_minib3d_TBrush_Copy_m)(struct _m_minib3d_TBrush_obj*);
struct _m_minib3d_TBrush_obj* __m_minib3d_TBrush_Copy(struct _m_minib3d_TBrush_obj*);
typedef BBINT (*_m_minib3d_TBrush_FreeBrush_m)(struct _m_minib3d_TBrush_obj*);
BBINT __m_minib3d_TBrush_FreeBrush(struct _m_minib3d_TBrush_obj*);
typedef struct _m_minib3d_TBrush_obj* (*_m_minib3d_TBrush_CreateBrush_TTBrush_fff_f)(BBFLOAT,BBFLOAT,BBFLOAT);
struct _m_minib3d_TBrush_obj* _m_minib3d_TBrush_CreateBrush_TTBrush_fff(BBFLOAT,BBFLOAT,BBFLOAT);
typedef struct _m_minib3d_TBrush_obj* (*_m_minib3d_TBrush_LoadBrush_TTBrush_Siff_f)(BBSTRING,BBINT,BBFLOAT,BBFLOAT);
struct _m_minib3d_TBrush_obj* _m_minib3d_TBrush_LoadBrush_TTBrush_Siff(BBSTRING,BBINT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TBrush_BrushColor_fff_m)(struct _m_minib3d_TBrush_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TBrush_BrushColor_fff(struct _m_minib3d_TBrush_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TBrush_BrushAlpha_f_m)(struct _m_minib3d_TBrush_obj*,BBFLOAT);
BBINT __m_minib3d_TBrush_BrushAlpha_f(struct _m_minib3d_TBrush_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TBrush_BrushShininess_f_m)(struct _m_minib3d_TBrush_obj*,BBFLOAT);
BBINT __m_minib3d_TBrush_BrushShininess_f(struct _m_minib3d_TBrush_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TBrush_BrushTexture_TTTextureii_m)(struct _m_minib3d_TBrush_obj*,struct _m_minib3d_TTexture_obj*,BBINT,BBINT);
BBINT __m_minib3d_TBrush_BrushTexture_TTTextureii(struct _m_minib3d_TBrush_obj*,struct _m_minib3d_TTexture_obj*,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TBrush_BrushBlend_i_m)(struct _m_minib3d_TBrush_obj*,BBINT);
BBINT __m_minib3d_TBrush_BrushBlend_i(struct _m_minib3d_TBrush_obj*,BBINT);
typedef BBINT (*_m_minib3d_TBrush_BrushFX_i_m)(struct _m_minib3d_TBrush_obj*,BBINT);
BBINT __m_minib3d_TBrush_BrushFX_i(struct _m_minib3d_TBrush_obj*,BBINT);
typedef struct _m_minib3d_TBrush_obj* (*_m_minib3d_TBrush_GetEntityBrush_TTBrush_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TBrush_obj* _m_minib3d_TBrush_GetEntityBrush_TTBrush_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef struct _m_minib3d_TBrush_obj* (*_m_minib3d_TBrush_GetSurfaceBrush_TTBrush_TTSurface_f)(struct _m_minib3d_TSurface_obj*);
struct _m_minib3d_TBrush_obj* _m_minib3d_TBrush_GetSurfaceBrush_TTBrush_TTSurface(struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TBrush_CompareBrushes_i_TTBrushTTBrush_f)(struct _m_minib3d_TBrush_obj*,struct _m_minib3d_TBrush_obj*);
BBINT _m_minib3d_TBrush_CompareBrushes_i_TTBrushTTBrush(struct _m_minib3d_TBrush_obj*,struct _m_minib3d_TBrush_obj*);
struct BBClass__m_minib3d_TBrush {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TBrush_Copy_m m_Copy;
	_m_minib3d_TBrush_FreeBrush_m m_FreeBrush;
	_m_minib3d_TBrush_CreateBrush_TTBrush_fff_f f_CreateBrush_TTBrush_fff;
	_m_minib3d_TBrush_LoadBrush_TTBrush_Siff_f f_LoadBrush_TTBrush_Siff;
	_m_minib3d_TBrush_BrushColor_fff_m m_BrushColor_fff;
	_m_minib3d_TBrush_BrushAlpha_f_m m_BrushAlpha_f;
	_m_minib3d_TBrush_BrushShininess_f_m m_BrushShininess_f;
	_m_minib3d_TBrush_BrushTexture_TTTextureii_m m_BrushTexture_TTTextureii;
	_m_minib3d_TBrush_BrushBlend_i_m m_BrushBlend_i;
	_m_minib3d_TBrush_BrushFX_i_m m_BrushFX_i;
	_m_minib3d_TBrush_GetEntityBrush_TTBrush_TTEntity_f f_GetEntityBrush_TTBrush_TTEntity;
	_m_minib3d_TBrush_GetSurfaceBrush_TTBrush_TTSurface_f f_GetSurfaceBrush_TTBrush_TTSurface;
	_m_minib3d_TBrush_CompareBrushes_i_TTBrushTTBrush_f f_CompareBrushes_i_TTBrushTTBrush;
};

struct _m_minib3d_TBrush_obj {
	struct BBClass__m_minib3d_TBrush* clas;
	BBINT __m_minib3d_tbrush_no_texs;
	BBSTRING __m_minib3d_tbrush_name;
	BBFLOAT __m_minib3d_tbrush_red;
	BBFLOAT __m_minib3d_tbrush_green;
	BBFLOAT __m_minib3d_tbrush_blue;
	BBFLOAT __m_minib3d_tbrush_alpha;
	BBFLOAT __m_minib3d_tbrush_shine;
	BBINT __m_minib3d_tbrush_blend;
	BBINT __m_minib3d_tbrush_fx;
	BBINT __m_minib3d_tbrush_tex_frame;
	BBARRAY __m_minib3d_tbrush_tex;
};
extern struct BBClass__m_minib3d_TBrush _m_minib3d_TBrush;
void __m_minib3d_TAnimation_New(struct _m_minib3d_TAnimation_obj* o);
typedef BBINT (*_m_minib3d_TAnimation_AnimateMesh_i_TTEntityfii_f)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBINT,BBINT);
BBINT _m_minib3d_TAnimation_AnimateMesh_i_TTEntityfii(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TAnimation_AnimateMesh2_i_TTEntityfii_f)(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBINT,BBINT);
BBINT _m_minib3d_TAnimation_AnimateMesh2_i_TTEntityfii(struct _m_minib3d_TEntity_obj*,BBFLOAT,BBINT,BBINT);
typedef BBINT (*_m_minib3d_TAnimation_VertexDeform_i_TTMesh_f)(struct _m_minib3d_TMesh_obj*);
BBINT _m_minib3d_TAnimation_VertexDeform_i_TTMesh(struct _m_minib3d_TMesh_obj*);
typedef BBINT (*_m_minib3d_TAnimation_NormaliseWeights_i_TTMesh_f)(struct _m_minib3d_TMesh_obj*);
BBINT _m_minib3d_TAnimation_NormaliseWeights_i_TTMesh(struct _m_minib3d_TMesh_obj*);
struct BBClass__m_minib3d_TAnimation {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TAnimation_AnimateMesh_i_TTEntityfii_f f_AnimateMesh_i_TTEntityfii;
	_m_minib3d_TAnimation_AnimateMesh2_i_TTEntityfii_f f_AnimateMesh2_i_TTEntityfii;
	_m_minib3d_TAnimation_VertexDeform_i_TTMesh_f f_VertexDeform_i_TTMesh;
	_m_minib3d_TAnimation_NormaliseWeights_i_TTMesh_f f_NormaliseWeights_i_TTMesh;
};

struct _m_minib3d_TAnimation_obj {
	struct BBClass__m_minib3d_TAnimation* clas;
};
extern struct BBClass__m_minib3d_TAnimation _m_minib3d_TAnimation;
void __m_minib3d_TAnimationKeys_New(struct _m_minib3d_TAnimationKeys_obj* o);
void __m_minib3d_TAnimationKeys_Delete(struct _m_minib3d_TAnimationKeys_obj* o);
typedef struct _m_minib3d_TAnimationKeys_obj* (*_m_minib3d_TAnimationKeys_Copy_m)(struct _m_minib3d_TAnimationKeys_obj*);
struct _m_minib3d_TAnimationKeys_obj* __m_minib3d_TAnimationKeys_Copy(struct _m_minib3d_TAnimationKeys_obj*);
struct BBClass__m_minib3d_TAnimationKeys {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TAnimationKeys_Copy_m m_Copy;
};

struct _m_minib3d_TAnimationKeys_obj {
	struct BBClass__m_minib3d_TAnimationKeys* clas;
	BBINT __m_minib3d_tanimationkeys_frames;
	BBARRAY __m_minib3d_tanimationkeys_flags;
	BBARRAY __m_minib3d_tanimationkeys_px;
	BBARRAY __m_minib3d_tanimationkeys_py;
	BBARRAY __m_minib3d_tanimationkeys_pz;
	BBARRAY __m_minib3d_tanimationkeys_sx;
	BBARRAY __m_minib3d_tanimationkeys_sy;
	BBARRAY __m_minib3d_tanimationkeys_sz;
	BBARRAY __m_minib3d_tanimationkeys_qw;
	BBARRAY __m_minib3d_tanimationkeys_qx;
	BBARRAY __m_minib3d_tanimationkeys_qy;
	BBARRAY __m_minib3d_tanimationkeys_qz;
};
extern struct BBClass__m_minib3d_TAnimationKeys _m_minib3d_TAnimationKeys;
void __m_minib3d_TModel_New(struct _m_minib3d_TModel_obj* o);
typedef struct _m_minib3d_TMesh_obj* (*_m_minib3d_TModel_LoadAnimB3D_TTMesh_STTEntity_f)(BBSTRING,struct _m_minib3d_TEntity_obj*);
struct _m_minib3d_TMesh_obj* _m_minib3d_TModel_LoadAnimB3D_TTMesh_STTEntity(BBSTRING,struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TModel_TrimVerts_i_vTTSurface_f)(struct _m_minib3d_TSurface_obj**);
BBINT _m_minib3d_TModel_TrimVerts_i_vTTSurface(struct _m_minib3d_TSurface_obj**);
typedef BBSTRING (*_m_minib3d_TModel_b3dReadString_S_vTTStream_f)(struct brl_stream_TStream_obj**);
BBSTRING _m_minib3d_TModel_b3dReadString_S_vTTStream(struct brl_stream_TStream_obj**);
typedef BBSTRING (*_m_minib3d_TModel_ReadTag_S_TTStream_f)(struct brl_stream_TStream_obj*);
BBSTRING _m_minib3d_TModel_ReadTag_S_TTStream(struct brl_stream_TStream_obj*);
typedef BBINT (*_m_minib3d_TModel_NewTag_i_S_f)(BBSTRING);
BBINT _m_minib3d_TModel_NewTag_i_S(BBSTRING);
struct BBClass__m_minib3d_TModel {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TModel_LoadAnimB3D_TTMesh_STTEntity_f f_LoadAnimB3D_TTMesh_STTEntity;
	_m_minib3d_TModel_TrimVerts_i_vTTSurface_f f_TrimVerts_i_vTTSurface;
	_m_minib3d_TModel_b3dReadString_S_vTTStream_f f_b3dReadString_S_vTTStream;
	_m_minib3d_TModel_ReadTag_S_TTStream_f f_ReadTag_S_TTStream;
	_m_minib3d_TModel_NewTag_i_S_f f_NewTag_i_S;
};

struct _m_minib3d_TModel_obj {
	struct BBClass__m_minib3d_TModel* clas;
};
extern struct BBClass__m_minib3d_TModel _m_minib3d_TModel;
void __m_minib3d_TColTree_New(struct _m_minib3d_TColTree_obj* o);
void __m_minib3d_TColTree_Delete(struct _m_minib3d_TColTree_obj* o);
typedef BBINT (*_m_minib3d_TColTree_TreeCheck_TTMesh_m)(struct _m_minib3d_TColTree_obj*,struct _m_minib3d_TMesh_obj*);
BBINT __m_minib3d_TColTree_TreeCheck_TTMesh(struct _m_minib3d_TColTree_obj*,struct _m_minib3d_TMesh_obj*);
struct BBClass__m_minib3d_TColTree {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TColTree_TreeCheck_TTMesh_m m_TreeCheck_TTMesh;
};

struct _m_minib3d_TColTree_obj {
	struct BBClass__m_minib3d_TColTree* clas;
	BBBYTE* __m_minib3d_tcoltree_c_col_tree;
	BBINT __m_minib3d_tcoltree_reset_col_tree;
};
extern struct BBClass__m_minib3d_TColTree _m_minib3d_TColTree;
void __m_minib3d_TPick_New(struct _m_minib3d_TPick_obj* o);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TPick_CameraPick_TTEntity_TTCameraff_f)(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
struct _m_minib3d_TEntity_obj* _m_minib3d_TPick_CameraPick_TTEntity_TTCameraff(struct _m_minib3d_TCamera_obj*,BBFLOAT,BBFLOAT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TPick_EntityPick_TTEntity_TTEntityf_f)(struct _m_minib3d_TEntity_obj*,BBFLOAT);
struct _m_minib3d_TEntity_obj* _m_minib3d_TPick_EntityPick_TTEntity_TTEntityf(struct _m_minib3d_TEntity_obj*,BBFLOAT);
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TPick_LinePick_TTEntity_fffffff_f)(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
struct _m_minib3d_TEntity_obj* _m_minib3d_TPick_LinePick_TTEntity_fffffff(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TPick_EntityVisible_i_TTEntityTTEntity_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TPick_EntityVisible_i_TTEntityTTEntity(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TEntity_obj*);
typedef BBFLOAT (*_m_minib3d_TPick_PickedX_f_f)();
BBFLOAT _m_minib3d_TPick_PickedX_f();
typedef BBFLOAT (*_m_minib3d_TPick_PickedY_f_f)();
BBFLOAT _m_minib3d_TPick_PickedY_f();
typedef BBFLOAT (*_m_minib3d_TPick_PickedZ_f_f)();
BBFLOAT _m_minib3d_TPick_PickedZ_f();
typedef BBFLOAT (*_m_minib3d_TPick_PickedNX_f_f)();
BBFLOAT _m_minib3d_TPick_PickedNX_f();
typedef BBFLOAT (*_m_minib3d_TPick_PickedNY_f_f)();
BBFLOAT _m_minib3d_TPick_PickedNY_f();
typedef BBFLOAT (*_m_minib3d_TPick_PickedNZ_f_f)();
BBFLOAT _m_minib3d_TPick_PickedNZ_f();
typedef BBFLOAT (*_m_minib3d_TPick_PickedTime_f_f)();
BBFLOAT _m_minib3d_TPick_PickedTime_f();
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TPick_PickedEntity_TTEntity_f)();
struct _m_minib3d_TEntity_obj* _m_minib3d_TPick_PickedEntity_TTEntity();
typedef struct _m_minib3d_TSurface_obj* (*_m_minib3d_TPick_PickedSurface_TTSurface_f)();
struct _m_minib3d_TSurface_obj* _m_minib3d_TPick_PickedSurface_TTSurface();
typedef BBINT (*_m_minib3d_TPick_PickedTriangle_i_f)();
BBINT _m_minib3d_TPick_PickedTriangle_i();
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TPick_Pick_TTEntity_fffffff_f)(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
struct _m_minib3d_TEntity_obj* _m_minib3d_TPick_Pick_TTEntity_fffffff(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT);
struct BBClass__m_minib3d_TPick {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TPick_CameraPick_TTEntity_TTCameraff_f f_CameraPick_TTEntity_TTCameraff;
	_m_minib3d_TPick_EntityPick_TTEntity_TTEntityf_f f_EntityPick_TTEntity_TTEntityf;
	_m_minib3d_TPick_LinePick_TTEntity_fffffff_f f_LinePick_TTEntity_fffffff;
	_m_minib3d_TPick_EntityVisible_i_TTEntityTTEntity_f f_EntityVisible_i_TTEntityTTEntity;
	_m_minib3d_TPick_PickedX_f_f f_PickedX_f;
	_m_minib3d_TPick_PickedY_f_f f_PickedY_f;
	_m_minib3d_TPick_PickedZ_f_f f_PickedZ_f;
	_m_minib3d_TPick_PickedNX_f_f f_PickedNX_f;
	_m_minib3d_TPick_PickedNY_f_f f_PickedNY_f;
	_m_minib3d_TPick_PickedNZ_f_f f_PickedNZ_f;
	_m_minib3d_TPick_PickedTime_f_f f_PickedTime_f;
	_m_minib3d_TPick_PickedEntity_TTEntity_f f_PickedEntity_TTEntity;
	_m_minib3d_TPick_PickedSurface_TTSurface_f f_PickedSurface_TTSurface;
	_m_minib3d_TPick_PickedTriangle_i_f f_PickedTriangle_i;
	_m_minib3d_TPick_Pick_TTEntity_fffffff_f f_Pick_TTEntity_fffffff;
};

struct _m_minib3d_TPick_obj {
	struct BBClass__m_minib3d_TPick* clas;
};
extern struct BBClass__m_minib3d_TPick _m_minib3d_TPick;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TPick_ent_list;
extern BBFLOAT _m_minib3d_TPick_picked_x;
extern BBFLOAT _m_minib3d_TPick_picked_y;
extern BBFLOAT _m_minib3d_TPick_picked_z;
extern BBFLOAT _m_minib3d_TPick_picked_nx;
extern BBFLOAT _m_minib3d_TPick_picked_ny;
extern BBFLOAT _m_minib3d_TPick_picked_nz;
extern BBFLOAT _m_minib3d_TPick_picked_time;
extern struct _m_minib3d_TEntity_obj* _m_minib3d_TPick_picked_ent;
extern struct _m_minib3d_TSurface_obj* _m_minib3d_TPick_picked_surface;
extern BBINT _m_minib3d_TPick_picked_triangle;
void __m_minib3d_TCollisionPair_New(struct _m_minib3d_TCollisionPair_obj* o);
void __m_minib3d_TCollisionPair_Delete(struct _m_minib3d_TCollisionPair_obj* o);
struct BBClass__m_minib3d_TCollisionPair {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
};

struct _m_minib3d_TCollisionPair_obj {
	struct BBClass__m_minib3d_TCollisionPair* clas;
	BBINT __m_minib3d_tcollisionpair_src_type;
	BBINT __m_minib3d_tcollisionpair_des_type;
	BBINT __m_minib3d_tcollisionpair_col_method;
	BBINT __m_minib3d_tcollisionpair_response;
};
extern struct BBClass__m_minib3d_TCollisionPair _m_minib3d_TCollisionPair;
extern struct brl_linkedlist_TList_obj* _m_minib3d_TCollisionPair_list;
extern BBARRAY _m_minib3d_TCollisionPair_ent_lists;
void __m_minib3d_TCollisionImpact_New(struct _m_minib3d_TCollisionImpact_obj* o);
void __m_minib3d_TCollisionImpact_Delete(struct _m_minib3d_TCollisionImpact_obj* o);
struct BBClass__m_minib3d_TCollisionImpact {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
};

struct _m_minib3d_TCollisionImpact_obj {
	struct BBClass__m_minib3d_TCollisionImpact* clas;
	BBFLOAT __m_minib3d_tcollisionimpact_x;
	BBFLOAT __m_minib3d_tcollisionimpact_y;
	BBFLOAT __m_minib3d_tcollisionimpact_z;
	BBFLOAT __m_minib3d_tcollisionimpact_nx;
	BBFLOAT __m_minib3d_tcollisionimpact_ny;
	BBFLOAT __m_minib3d_tcollisionimpact_nz;
	BBFLOAT __m_minib3d_tcollisionimpact_time;
	struct _m_minib3d_TEntity_obj* __m_minib3d_tcollisionimpact_ent;
	struct _m_minib3d_TSurface_obj* __m_minib3d_tcollisionimpact_surf;
	BBINT __m_minib3d_tcollisionimpact_tri;
};
extern struct BBClass__m_minib3d_TCollisionImpact _m_minib3d_TCollisionImpact;
void __m_minib3d_TVector_New(struct _m_minib3d_TVector_obj* o);
void __m_minib3d_TVector_Delete(struct _m_minib3d_TVector_obj* o);
BBINT __m_minib3d_TVector_Compare(struct _m_minib3d_TVector_obj* o, BBOBJECT otherObject);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Create_TTVector_fff_f)(BBFLOAT,BBFLOAT,BBFLOAT);
struct _m_minib3d_TVector_obj* _m_minib3d_TVector_Create_TTVector_fff(BBFLOAT,BBFLOAT,BBFLOAT);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Copy_m)(struct _m_minib3d_TVector_obj*);
struct _m_minib3d_TVector_obj* __m_minib3d_TVector_Copy(struct _m_minib3d_TVector_obj*);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Add_TTVector_m)(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
struct _m_minib3d_TVector_obj* __m_minib3d_TVector_Add_TTVector(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Subtract_TTVector_m)(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
struct _m_minib3d_TVector_obj* __m_minib3d_TVector_Subtract_TTVector(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Multiply_f_m)(struct _m_minib3d_TVector_obj*,BBFLOAT);
struct _m_minib3d_TVector_obj* __m_minib3d_TVector_Multiply_f(struct _m_minib3d_TVector_obj*,BBFLOAT);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Divide_f_m)(struct _m_minib3d_TVector_obj*,BBFLOAT);
struct _m_minib3d_TVector_obj* __m_minib3d_TVector_Divide_f(struct _m_minib3d_TVector_obj*,BBFLOAT);
typedef BBFLOAT (*_m_minib3d_TVector_Dot_TTVector_m)(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
BBFLOAT __m_minib3d_TVector_Dot_TTVector(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
typedef struct _m_minib3d_TVector_obj* (*_m_minib3d_TVector_Cross_TTVector_m)(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
struct _m_minib3d_TVector_obj* __m_minib3d_TVector_Cross_TTVector(struct _m_minib3d_TVector_obj*,struct _m_minib3d_TVector_obj*);
typedef BBINT (*_m_minib3d_TVector_Normalize_m)(struct _m_minib3d_TVector_obj*);
BBINT __m_minib3d_TVector_Normalize(struct _m_minib3d_TVector_obj*);
typedef BBFLOAT (*_m_minib3d_TVector_Length_m)(struct _m_minib3d_TVector_obj*);
BBFLOAT __m_minib3d_TVector_Length(struct _m_minib3d_TVector_obj*);
typedef BBFLOAT (*_m_minib3d_TVector_SquaredLength_m)(struct _m_minib3d_TVector_obj*);
BBFLOAT __m_minib3d_TVector_SquaredLength(struct _m_minib3d_TVector_obj*);
typedef BBFLOAT (*_m_minib3d_TVector_SetLength_f_m)(struct _m_minib3d_TVector_obj*,BBFLOAT);
BBFLOAT __m_minib3d_TVector_SetLength_f(struct _m_minib3d_TVector_obj*,BBFLOAT);
typedef BBFLOAT (*_m_minib3d_TVector_VectorYaw_f_fff_f)(BBFLOAT,BBFLOAT,BBFLOAT);
BBFLOAT _m_minib3d_TVector_VectorYaw_f_fff(BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBFLOAT (*_m_minib3d_TVector_VectorPitch_f_fff_f)(BBFLOAT,BBFLOAT,BBFLOAT);
BBFLOAT _m_minib3d_TVector_VectorPitch_f_fff(BBFLOAT,BBFLOAT,BBFLOAT);
struct BBClass__m_minib3d_TVector {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TVector_Create_TTVector_fff_f f_Create_TTVector_fff;
	_m_minib3d_TVector_Copy_m m_Copy;
	_m_minib3d_TVector_Add_TTVector_m m_Add_TTVector;
	_m_minib3d_TVector_Subtract_TTVector_m m_Subtract_TTVector;
	_m_minib3d_TVector_Multiply_f_m m_Multiply_f;
	_m_minib3d_TVector_Divide_f_m m_Divide_f;
	_m_minib3d_TVector_Dot_TTVector_m m_Dot_TTVector;
	_m_minib3d_TVector_Cross_TTVector_m m_Cross_TTVector;
	_m_minib3d_TVector_Normalize_m m_Normalize;
	_m_minib3d_TVector_Length_m m_Length;
	_m_minib3d_TVector_SquaredLength_m m_SquaredLength;
	_m_minib3d_TVector_SetLength_f_m m_SetLength_f;
	_m_minib3d_TVector_VectorYaw_f_fff_f f_VectorYaw_f_fff;
	_m_minib3d_TVector_VectorPitch_f_fff_f f_VectorPitch_f_fff;
};

struct _m_minib3d_TVector_obj {
	struct BBClass__m_minib3d_TVector* clas;
	BBFLOAT __m_minib3d_tvector_x;
	BBFLOAT __m_minib3d_tvector_y;
	BBFLOAT __m_minib3d_tvector_z;
};
extern struct BBClass__m_minib3d_TVector _m_minib3d_TVector;
void __m_minib3d_TMatrix_New(struct _m_minib3d_TMatrix_obj* o);
void __m_minib3d_TMatrix_Delete(struct _m_minib3d_TMatrix_obj* o);
typedef BBINT (*_m_minib3d_TMatrix_LoadIdentity_m)(struct _m_minib3d_TMatrix_obj*);
BBINT __m_minib3d_TMatrix_LoadIdentity(struct _m_minib3d_TMatrix_obj*);
typedef struct _m_minib3d_TMatrix_obj* (*_m_minib3d_TMatrix_Copy_m)(struct _m_minib3d_TMatrix_obj*);
struct _m_minib3d_TMatrix_obj* __m_minib3d_TMatrix_Copy(struct _m_minib3d_TMatrix_obj*);
typedef BBINT (*_m_minib3d_TMatrix_Overwrite_TTMatrix_m)(struct _m_minib3d_TMatrix_obj*,struct _m_minib3d_TMatrix_obj*);
BBINT __m_minib3d_TMatrix_Overwrite_TTMatrix(struct _m_minib3d_TMatrix_obj*,struct _m_minib3d_TMatrix_obj*);
typedef struct _m_minib3d_TMatrix_obj* (*_m_minib3d_TMatrix_Inverse_m)(struct _m_minib3d_TMatrix_obj*);
struct _m_minib3d_TMatrix_obj* __m_minib3d_TMatrix_Inverse(struct _m_minib3d_TMatrix_obj*);
typedef BBINT (*_m_minib3d_TMatrix_Multiply_TTMatrix_m)(struct _m_minib3d_TMatrix_obj*,struct _m_minib3d_TMatrix_obj*);
BBINT __m_minib3d_TMatrix_Multiply_TTMatrix(struct _m_minib3d_TMatrix_obj*,struct _m_minib3d_TMatrix_obj*);
typedef BBINT (*_m_minib3d_TMatrix_Translate_fff_m)(struct _m_minib3d_TMatrix_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TMatrix_Translate_fff(struct _m_minib3d_TMatrix_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TMatrix_Scale_fff_m)(struct _m_minib3d_TMatrix_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TMatrix_Scale_fff(struct _m_minib3d_TMatrix_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TMatrix_Rotate_fff_m)(struct _m_minib3d_TMatrix_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
BBINT __m_minib3d_TMatrix_Rotate_fff(struct _m_minib3d_TMatrix_obj*,BBFLOAT,BBFLOAT,BBFLOAT);
typedef BBINT (*_m_minib3d_TMatrix_RotatePitch_f_m)(struct _m_minib3d_TMatrix_obj*,BBFLOAT);
BBINT __m_minib3d_TMatrix_RotatePitch_f(struct _m_minib3d_TMatrix_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TMatrix_RotateYaw_f_m)(struct _m_minib3d_TMatrix_obj*,BBFLOAT);
BBINT __m_minib3d_TMatrix_RotateYaw_f(struct _m_minib3d_TMatrix_obj*,BBFLOAT);
typedef BBINT (*_m_minib3d_TMatrix_RotateRoll_f_m)(struct _m_minib3d_TMatrix_obj*,BBFLOAT);
BBINT __m_minib3d_TMatrix_RotateRoll_f(struct _m_minib3d_TMatrix_obj*,BBFLOAT);
struct BBClass__m_minib3d_TMatrix {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TMatrix_LoadIdentity_m m_LoadIdentity;
	_m_minib3d_TMatrix_Copy_m m_Copy;
	_m_minib3d_TMatrix_Overwrite_TTMatrix_m m_Overwrite_TTMatrix;
	_m_minib3d_TMatrix_Inverse_m m_Inverse;
	_m_minib3d_TMatrix_Multiply_TTMatrix_m m_Multiply_TTMatrix;
	_m_minib3d_TMatrix_Translate_fff_m m_Translate_fff;
	_m_minib3d_TMatrix_Scale_fff_m m_Scale_fff;
	_m_minib3d_TMatrix_Rotate_fff_m m_Rotate_fff;
	_m_minib3d_TMatrix_RotatePitch_f_m m_RotatePitch_f;
	_m_minib3d_TMatrix_RotateYaw_f_m m_RotateYaw_f;
	_m_minib3d_TMatrix_RotateRoll_f_m m_RotateRoll_f;
};

struct _m_minib3d_TMatrix_obj {
	struct BBClass__m_minib3d_TMatrix* clas;
	BBARRAY __m_minib3d_tmatrix_grid;
};
extern struct BBClass__m_minib3d_TMatrix _m_minib3d_TMatrix;
void __m_minib3d_TQuaternion_New(struct _m_minib3d_TQuaternion_obj* o);
void __m_minib3d_TQuaternion_Delete(struct _m_minib3d_TQuaternion_obj* o);
typedef BBINT (*_m_minib3d_TQuaternion_QuatToMat_i_ffffvTTMatrix_f)(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TMatrix_obj**);
BBINT _m_minib3d_TQuaternion_QuatToMat_i_ffffvTTMatrix(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,struct _m_minib3d_TMatrix_obj**);
typedef BBINT (*_m_minib3d_TQuaternion_QuatToEuler_i_ffffvfvfvf_f)(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT*,BBFLOAT*,BBFLOAT*);
BBINT _m_minib3d_TQuaternion_QuatToEuler_i_ffffvfvfvf(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT*,BBFLOAT*,BBFLOAT*);
typedef BBINT (*_m_minib3d_TQuaternion_Slerp_i_ffffffffvfvfvfvff_f)(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT*,BBFLOAT*,BBFLOAT*,BBFLOAT*,BBFLOAT);
BBINT _m_minib3d_TQuaternion_Slerp_i_ffffffffvfvfvfvff(BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT,BBFLOAT*,BBFLOAT*,BBFLOAT*,BBFLOAT*,BBFLOAT);
struct BBClass__m_minib3d_TQuaternion {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TQuaternion_QuatToMat_i_ffffvTTMatrix_f f_QuatToMat_i_ffffvTTMatrix;
	_m_minib3d_TQuaternion_QuatToEuler_i_ffffvfvfvf_f f_QuatToEuler_i_ffffvfvfvf;
	_m_minib3d_TQuaternion_Slerp_i_ffffffffvfvfvfvff_f f_Slerp_i_ffffffffvfvfvfvff;
};

struct _m_minib3d_TQuaternion_obj {
	struct BBClass__m_minib3d_TQuaternion* clas;
	BBFLOAT __m_minib3d_tquaternion_w;
	BBFLOAT __m_minib3d_tquaternion_x;
	BBFLOAT __m_minib3d_tquaternion_y;
	BBFLOAT __m_minib3d_tquaternion_z;
};
extern struct BBClass__m_minib3d_TQuaternion _m_minib3d_TQuaternion;
void __m_minib3d_THardwareInfo_New(struct _m_minib3d_THardwareInfo_obj* o);
typedef BBINT (*_m_minib3d_THardwareInfo_GetInfo_i_f)();
BBINT _m_minib3d_THardwareInfo_GetInfo_i();
typedef BBINT (*_m_minib3d_THardwareInfo_DisplayInfo_i_i_f)(BBINT);
BBINT _m_minib3d_THardwareInfo_DisplayInfo_i_i(BBINT);
struct BBClass__m_minib3d_THardwareInfo {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_THardwareInfo_GetInfo_i_f f_GetInfo_i;
	_m_minib3d_THardwareInfo_DisplayInfo_i_i_f f_DisplayInfo_i_i;
};

struct _m_minib3d_THardwareInfo_obj {
	struct BBClass__m_minib3d_THardwareInfo* clas;
};
extern struct BBClass__m_minib3d_THardwareInfo _m_minib3d_THardwareInfo;
extern BBINT _m_minib3d_THardwareInfo_ScreenWidth;
extern BBINT _m_minib3d_THardwareInfo_ScreenHeight;
extern BBINT _m_minib3d_THardwareInfo_ScreenDepth;
extern BBINT _m_minib3d_THardwareInfo_ScreenHertz;
extern BBSTRING _m_minib3d_THardwareInfo_Vendor;
extern BBSTRING _m_minib3d_THardwareInfo_Renderer;
extern BBSTRING _m_minib3d_THardwareInfo_OGLVersion;
extern BBSTRING _m_minib3d_THardwareInfo_Extensions;
extern BBINT _m_minib3d_THardwareInfo_VBOSupport;
extern BBINT _m_minib3d_THardwareInfo_GLTCSupport;
extern BBINT _m_minib3d_THardwareInfo_S3TCSupport;
extern BBINT _m_minib3d_THardwareInfo_AnIsoSupport;
extern BBINT _m_minib3d_THardwareInfo_MultiTexSupport;
extern BBINT _m_minib3d_THardwareInfo_TexBlendSupport;
extern BBINT _m_minib3d_THardwareInfo_CubemapSupport;
extern BBINT _m_minib3d_THardwareInfo_DepthmapSupport;
extern BBINT _m_minib3d_THardwareInfo_VPSupport;
extern BBINT _m_minib3d_THardwareInfo_FPSupport;
extern BBINT _m_minib3d_THardwareInfo_ShaderSupport;
extern BBINT _m_minib3d_THardwareInfo_VSSupport;
extern BBINT _m_minib3d_THardwareInfo_FSSupport;
extern BBINT _m_minib3d_THardwareInfo_SLSupport;
extern BBINT _m_minib3d_THardwareInfo_MaxTextures;
extern BBINT _m_minib3d_THardwareInfo_MaxTexSize;
extern BBINT _m_minib3d_THardwareInfo_MaxLights;
void __m_minib3d_TBlitz2D_New(struct _m_minib3d_TBlitz2D_obj* o);
typedef BBINT (*_m_minib3d_TBlitz2D_Text_i_iiS_f)(BBINT,BBINT,BBSTRING);
BBINT _m_minib3d_TBlitz2D_Text_i_iiS(BBINT,BBINT,BBSTRING);
typedef BBINT (*_m_minib3d_TBlitz2D_BeginMax2D_i_f)();
BBINT _m_minib3d_TBlitz2D_BeginMax2D_i();
typedef BBINT (*_m_minib3d_TBlitz2D_EndMax2D_i_f)();
BBINT _m_minib3d_TBlitz2D_EndMax2D_i();
struct BBClass__m_minib3d_TBlitz2D {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TBlitz2D_Text_i_iiS_f f_Text_i_iiS;
	_m_minib3d_TBlitz2D_BeginMax2D_i_f f_BeginMax2D_i;
	_m_minib3d_TBlitz2D_EndMax2D_i_f f_EndMax2D_i;
};

struct _m_minib3d_TBlitz2D_obj {
	struct BBClass__m_minib3d_TBlitz2D* clas;
};
extern struct BBClass__m_minib3d_TBlitz2D _m_minib3d_TBlitz2D;
void __m_minib3d_TUtility_New(struct _m_minib3d_TUtility_obj* o);
typedef BBFLOAT (*_m_minib3d_TUtility_UpdateValue_f_fff_f)(BBFLOAT,BBFLOAT,BBFLOAT);
BBFLOAT _m_minib3d_TUtility_UpdateValue_f_fff(BBFLOAT,BBFLOAT,BBFLOAT);
struct BBClass__m_minib3d_TUtility {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TUtility_UpdateValue_f_fff_f f_UpdateValue_f_fff;
};

struct _m_minib3d_TUtility_obj {
	struct BBClass__m_minib3d_TUtility* clas;
};
extern struct BBClass__m_minib3d_TUtility _m_minib3d_TUtility;
void __m_minib3d_TDebug_New(struct _m_minib3d_TDebug_obj* o);
typedef BBINT (*_m_minib3d_TDebug_DebugWorld_i_f)();
BBINT _m_minib3d_TDebug_DebugWorld_i();
typedef struct _m_minib3d_TEntity_obj* (*_m_minib3d_TDebug_DebugEntity_TTEntity_TTEntityTTCamera_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TCamera_obj*);
struct _m_minib3d_TEntity_obj* _m_minib3d_TDebug_DebugEntity_TTEntity_TTEntityTTCamera(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TCamera_obj*);
typedef BBINT (*_m_minib3d_TDebug_UpdateBoundingSphere_i_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TDebug_UpdateBoundingSphere_i_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TDebug_UpdateSurface_i_TTEntityTTSurface_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TSurface_obj*);
BBINT _m_minib3d_TDebug_UpdateSurface_i_TTEntityTTSurface(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TDebug_UpdateMarker_i_TTEntityTTCamera_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TCamera_obj*);
BBINT _m_minib3d_TDebug_UpdateMarker_i_TTEntityTTCamera(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TCamera_obj*);
typedef BBINT (*_m_minib3d_TDebug_EntityInfo1_i_TTEntity_f)(struct _m_minib3d_TEntity_obj*);
BBINT _m_minib3d_TDebug_EntityInfo1_i_TTEntity(struct _m_minib3d_TEntity_obj*);
typedef BBINT (*_m_minib3d_TDebug_EntityInfo2_i_TTEntityTTSurface_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TSurface_obj*);
BBINT _m_minib3d_TDebug_EntityInfo2_i_TTEntityTTSurface(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TDebug_EntityInfo3_i_TTEntityTTSurface_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TSurface_obj*);
BBINT _m_minib3d_TDebug_EntityInfo3_i_TTEntityTTSurface(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TSurface_obj*);
typedef BBINT (*_m_minib3d_TDebug_EntityInfo4_i_TTEntityTTCamera_f)(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TCamera_obj*);
BBINT _m_minib3d_TDebug_EntityInfo4_i_TTEntityTTCamera(struct _m_minib3d_TEntity_obj*,struct _m_minib3d_TCamera_obj*);
struct BBClass__m_minib3d_TDebug {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	_m_minib3d_TDebug_DebugWorld_i_f f_DebugWorld_i;
	_m_minib3d_TDebug_DebugEntity_TTEntity_TTEntityTTCamera_f f_DebugEntity_TTEntity_TTEntityTTCamera;
	_m_minib3d_TDebug_UpdateBoundingSphere_i_TTEntity_f f_UpdateBoundingSphere_i_TTEntity;
	_m_minib3d_TDebug_UpdateSurface_i_TTEntityTTSurface_f f_UpdateSurface_i_TTEntityTTSurface;
	_m_minib3d_TDebug_UpdateMarker_i_TTEntityTTCamera_f f_UpdateMarker_i_TTEntityTTCamera;
	_m_minib3d_TDebug_EntityInfo1_i_TTEntity_f f_EntityInfo1_i_TTEntity;
	_m_minib3d_TDebug_EntityInfo2_i_TTEntityTTSurface_f f_EntityInfo2_i_TTEntityTTSurface;
	_m_minib3d_TDebug_EntityInfo3_i_TTEntityTTSurface_f f_EntityInfo3_i_TTEntityTTSurface;
	_m_minib3d_TDebug_EntityInfo4_i_TTEntityTTCamera_f f_EntityInfo4_i_TTEntityTTCamera;
};

struct _m_minib3d_TDebug_obj {
	struct BBClass__m_minib3d_TDebug* clas;
};
extern struct BBClass__m_minib3d_TDebug _m_minib3d_TDebug;
extern BBINT _m_minib3d_TDebug_cno;
extern BBINT _m_minib3d_TDebug_surf_no;
extern BBINT _m_minib3d_TDebug_info;
extern BBINT _m_minib3d_TDebug_show_ents;
extern struct _m_minib3d_TMesh_obj* _m_minib3d_TDebug_bounding_sphere;
extern struct _m_minib3d_TMesh_obj* _m_minib3d_TDebug_debug_mesh;
extern struct _m_minib3d_TSurface_obj* _m_minib3d_TDebug_debug_surf;
extern struct _m_minib3d_TMesh_obj* _m_minib3d_TDebug_marker;
extern BBBYTE* C_CreateVecObject(BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z);
extern BBBYTE* C_CreateMatrixObject(BBBYTE* bbt_vec_i,BBBYTE* bbt_vec_j,BBBYTE* bbt_vec_k);
extern BBBYTE* C_CreateTFormObject(BBBYTE* bbt_mat,BBBYTE* bbt_vec_v);
extern BBINT C_UpdateVecObject(BBBYTE* bbt_vec,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z);
extern BBBYTE* C_CreateCollisionInfoObject(BBBYTE* bbt_vec_a,BBBYTE* bbt_vec_b,BBBYTE* bbt_vec_radius);
extern BBBYTE* C_CreateCollisionObject();
BBINT _m_minib3d_QuickCheck(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TEntity_obj* bbt_ent2);
extern BBINT C_UpdateMatrixObject(BBBYTE* bbt_mat,BBBYTE* bbt_vec_i,BBBYTE* bbt_vec_j,BBBYTE* bbt_vec_k);
extern BBINT C_UpdateTFormObject(BBBYTE* bbt_tform,BBBYTE* bbt_mat,BBBYTE* bbt_vec_v);
extern BBINT C_UpdateCollisionInfoObject(BBBYTE* bbt_col_info,BBFLOAT bbt_dst_radius,BBFLOAT bbt_ax,BBFLOAT bbt_ay,BBFLOAT bbt_az,BBFLOAT bbt_bx,BBFLOAT bbt_by,BBFLOAT bbt_bz);
extern BBINT C_DeleteColTree(BBBYTE* bbt_col_tree);
extern BBBYTE* C_NewMeshInfo();
extern BBINT C_AddSurface(BBBYTE* bbt_mesh_info,BBINT bbt_no_tris,BBINT bbt_no_verts,BBSHORT* bbt_tris,BBFLOAT* bbt_verts,BBINT bbt_surf);
extern BBBYTE* C_CreateColTree(BBBYTE* bbt_mesh_info);
extern BBINT C_DeleteMeshInfo(BBBYTE* bbt_mesh_info);
extern BBINT C_CollisionDetect(BBBYTE* bbt_col_info,BBBYTE* bbt_coll,BBBYTE* bbt_tform,BBBYTE* bbt_col_tree,BBINT bbt_method_no);
extern BBINT C_CollisionResponse(BBBYTE* bbt_col_info,BBBYTE* bbt_coll,BBINT bbt_response);
extern BBFLOAT C_CollisionX();
extern BBFLOAT C_CollisionY();
extern BBFLOAT C_CollisionZ();
extern BBFLOAT C_CollisionNX();
extern BBFLOAT C_CollisionNY();
extern BBFLOAT C_CollisionNZ();
extern BBINT C_CollisionSurface();
extern BBINT C_CollisionTriangle();
extern BBINT C_DeleteCollisionObject(BBBYTE* bbt_coll);
extern BBINT C_CollisionFinal(BBBYTE* bbt_col_info);
extern BBFLOAT C_CollisionPosX();
extern BBFLOAT C_CollisionPosY();
extern BBFLOAT C_CollisionPosZ();
extern BBINT C_DeleteCollisionInfoObject(BBBYTE* bbt_col_info);
BBINT _m_minib3d_UpdateCollisions();
BBINT _m_minib3d_BoxFromPoints(BBFLOAT bbt_px1,BBFLOAT bbt_py1,BBFLOAT bbt_pz1,BBFLOAT bbt_px2,BBFLOAT bbt_py2,BBFLOAT bbt_pz2,BBFLOAT* bbt_bx1,BBFLOAT* bbt_by1,BBFLOAT* bbt_bz1,BBFLOAT* bbt_bx2,BBFLOAT* bbt_by2,BBFLOAT* bbt_bz2);
BBINT _m_minib3d_BoxFromTri(BBFLOAT bbt_tx1,BBFLOAT bbt_ty1,BBFLOAT bbt_tz1,BBFLOAT bbt_tx2,BBFLOAT bbt_ty2,BBFLOAT bbt_tz2,BBFLOAT bbt_tx3,BBFLOAT bbt_ty3,BBFLOAT bbt_tz3,BBFLOAT* bbt_bx1,BBFLOAT* bbt_by1,BBFLOAT* bbt_bz1,BBFLOAT* bbt_bx2,BBFLOAT* bbt_by2,BBFLOAT* bbt_bz2);
BBINT _m_minib3d_BoxBoxIntersection(BBFLOAT bbt_ax1,BBFLOAT bbt_ay1,BBFLOAT bbt_az1,BBFLOAT bbt_ax2,BBFLOAT bbt_ay2,BBFLOAT bbt_az2,BBFLOAT bbt_bx1,BBFLOAT bbt_by1,BBFLOAT bbt_bz1,BBFLOAT bbt_bx2,BBFLOAT bbt_by2,BBFLOAT bbt_bz2);
BBINT _m_minib3d_BoxSphereIntersection(BBFLOAT bbt_x1,BBFLOAT bbt_y1,BBFLOAT bbt_z1,BBFLOAT bbt_x2,BBFLOAT bbt_y2,BBFLOAT bbt_z2,BBFLOAT bbt_sx,BBFLOAT bbt_sy,BBFLOAT bbt_sz,BBFLOAT bbt_sr);
BBINT _m_minib3d_BackBufferToTex(struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_mipmap_no,BBINT bbt_frame);
BBINT _m_minib3d_MeshCullRadius(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_radius);
BBINT _m_minib3d_CountSurfaces(struct _m_minib3d_TMesh_obj* bbt_mesh);
struct _m_minib3d_TSurface_obj* _m_minib3d_GetSurface(struct _m_minib3d_TMesh_obj* bbt_mesh,BBINT bbt_surf_no);
struct _m_minib3d_TMesh_obj* _m_minib3d_AddMesh(struct _m_minib3d_TMesh_obj* bbt_mesh1,struct _m_minib3d_TMesh_obj* bbt_mesh2);
BBINT _m_minib3d_AddTriangle(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_v0,BBINT bbt_v1,BBINT bbt_v2);
BBINT _m_minib3d_AddVertex(struct _m_minib3d_TSurface_obj* bbt_surf,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBFLOAT bbt_u,BBFLOAT bbt_v,BBFLOAT bbt_w);
BBINT _m_minib3d_AmbientLight(BBFLOAT bbt_r,BBFLOAT bbt_g,BBFLOAT bbt_b);
BBINT _m_minib3d_AntiAlias(BBINT bbt_samples);
BBINT _m_minib3d_Animate(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_mode,BBFLOAT bbt_speed,BBINT bbt_seq,BBINT bbt_trans);
BBINT _m_minib3d_Animating(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_AnimLength(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_AnimSeq(struct _m_minib3d_TEntity_obj* bbt_ent);
BBFLOAT _m_minib3d_AnimTime(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_BrushAlpha(struct _m_minib3d_TBrush_obj* bbt_brush,BBFLOAT bbt_a);
BBINT _m_minib3d_BrushBlend(struct _m_minib3d_TBrush_obj* bbt_brush,BBINT bbt_blend);
BBINT _m_minib3d_BrushColor(struct _m_minib3d_TBrush_obj* bbt_brush,BBFLOAT bbt_r,BBFLOAT bbt_g,BBFLOAT bbt_b);
BBINT _m_minib3d_BrushFX(struct _m_minib3d_TBrush_obj* bbt_brush,BBINT bbt_fx);
BBINT _m_minib3d_BrushShininess(struct _m_minib3d_TBrush_obj* bbt_brush,BBFLOAT bbt_s);
BBINT _m_minib3d_BrushTexture(struct _m_minib3d_TBrush_obj* bbt_brush,struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_frame,BBINT bbt_index);
BBINT _m_minib3d_CameraClsColor(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_r,BBFLOAT bbt_g,BBFLOAT bbt_b);
BBINT _m_minib3d_CameraClsMode(struct _m_minib3d_TCamera_obj* bbt_cam,BBINT bbt_cls_depth,BBINT bbt_cls_zbuffer);
BBINT _m_minib3d_CameraFogColor(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_r,BBFLOAT bbt_g,BBFLOAT bbt_b);
BBINT _m_minib3d_CameraFogMode(struct _m_minib3d_TCamera_obj* bbt_cam,BBINT bbt_mode);
BBINT _m_minib3d_CameraFogRange(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_near,BBFLOAT bbt_far);
extern BBBYTE* C_CreateLineObject(BBFLOAT bbt_ox,BBFLOAT bbt_oy,BBFLOAT bbt_oz,BBFLOAT bbt_dx,BBFLOAT bbt_dy,BBFLOAT bbt_dz);
extern BBINT C_UpdateLineObject(BBBYTE* bbt_line,BBFLOAT bbt_ox,BBFLOAT bbt_oy,BBFLOAT bbt_oz,BBFLOAT bbt_dx,BBFLOAT bbt_dy,BBFLOAT bbt_dz);
extern BBINT C_Pick(BBBYTE* bbt_col_info,BBBYTE* bbt_line,BBFLOAT bbt_radius,BBBYTE* bbt_coll,BBBYTE* bbt_dst_tform,BBBYTE* bbt_mesh_col,BBINT bbt_pick_geom);
extern BBFLOAT C_CollisionTime();
struct _m_minib3d_TEntity_obj* _m_minib3d_CameraPick(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_x,BBFLOAT bbt_y);
BBINT _m_minib3d_CameraProject(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z);
BBINT _m_minib3d_CameraProjMode(struct _m_minib3d_TCamera_obj* bbt_cam,BBINT bbt_mode);
BBINT _m_minib3d_CameraRange(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_near,BBFLOAT bbt_far);
BBINT _m_minib3d_CameraViewport(struct _m_minib3d_TCamera_obj* bbt_cam,BBINT bbt_x,BBINT bbt_y,BBINT bbt_width,BBINT bbt_height);
BBINT _m_minib3d_CameraZoom(struct _m_minib3d_TCamera_obj* bbt_cam,BBFLOAT bbt_zoom);
BBINT _m_minib3d_ClearCollisions();
BBINT _m_minib3d_ClearSurface(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_clear_verts,BBINT bbt_clear_tris);
BBINT _m_minib3d_ClearTextureFilters();
BBINT _m_minib3d_ClearWorld(BBINT bbt_entities,BBINT bbt_brushes,BBINT bbt_textures);
struct _m_minib3d_TEntity_obj* _m_minib3d_CollisionEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBINT _m_minib3d_Collisions(BBINT bbt_src_no,BBINT bbt_dest_no,BBINT bbt_method_no,BBINT bbt_response_no);
BBFLOAT _m_minib3d_CollisionNX(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBFLOAT _m_minib3d_CollisionNY(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBFLOAT _m_minib3d_CollisionNZ(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
struct _m_minib3d_TSurface_obj* _m_minib3d_CollisionSurface(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBFLOAT _m_minib3d_CollisionTime(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBINT _m_minib3d_CollisionTriangle(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBFLOAT _m_minib3d_CollisionX(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBFLOAT _m_minib3d_CollisionY(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBFLOAT _m_minib3d_CollisionZ(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_index);
BBINT _m_minib3d_CountChildren(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_CountCollisions(struct _m_minib3d_TEntity_obj* bbt_ent);
struct _m_minib3d_TEntity_obj* _m_minib3d_CopyEntity(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TMesh_obj* _m_minib3d_CopyMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,struct _m_minib3d_TEntity_obj* bbt_parent);
BBINT _m_minib3d_CountTriangles(struct _m_minib3d_TSurface_obj* bbt_surf);
BBINT _m_minib3d_CountVertices(struct _m_minib3d_TSurface_obj* bbt_surf);
struct _m_minib3d_TBrush_obj* _m_minib3d_CreateBrush(BBFLOAT bbt_r,BBFLOAT bbt_g,BBFLOAT bbt_b);
struct _m_minib3d_TCamera_obj* _m_minib3d_CreateCamera(struct _m_minib3d_TEntity_obj* bbt_parent);
extern BBINT C_UpdateNormals(BBINT bbt_no_tris,BBINT bbt_no_verts,BBSHORT* bbt_tris,BBFLOAT* bbt_vert_coords,BBFLOAT* bbt_vert_norms);
struct _m_minib3d_TMesh_obj* _m_minib3d_CreateCone(BBINT bbt_segments,BBINT bbt_solid,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TMesh_obj* _m_minib3d_CreateCylinder(BBINT bbt_segments,BBINT bbt_solid,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TMesh_obj* _m_minib3d_CreateCube(struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TMesh_obj* _m_minib3d_CreateMesh(struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TLight_obj* _m_minib3d_CreateLight(BBINT bbt_light_type,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TPivot_obj* _m_minib3d_CreatePivot(struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TMesh_obj* _m_minib3d_CreateSphere(BBINT bbt_segments,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TSprite_obj* _m_minib3d_CreateSprite(struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TSurface_obj* _m_minib3d_CreateSurface(struct _m_minib3d_TMesh_obj* bbt_mesh,struct _m_minib3d_TBrush_obj* bbt_brush);
struct _m_minib3d_TTexture_obj* _m_minib3d_CreateTexture(BBINT bbt_width,BBINT bbt_height,BBINT bbt_flags,BBINT bbt_frames);
BBFLOAT _m_minib3d_DeltaPitch(struct _m_minib3d_TEntity_obj* bbt_ent1,struct _m_minib3d_TEntity_obj* bbt_ent2);
BBFLOAT _m_minib3d_DeltaYaw(struct _m_minib3d_TEntity_obj* bbt_ent1,struct _m_minib3d_TEntity_obj* bbt_ent2);
BBINT _m_minib3d_EntityAlpha(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_alpha);
BBINT _m_minib3d_EntityAutoFade(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_near,BBFLOAT bbt_far);
BBINT _m_minib3d_EntityBlend(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_blend);
BBINT _m_minib3d_EntityBox(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBFLOAT bbt_w,BBFLOAT bbt_h,BBFLOAT bbt_d);
BBSTRING _m_minib3d_EntityClass(struct _m_minib3d_TEntity_obj* bbt_ent);
struct _m_minib3d_TEntity_obj* _m_minib3d_EntityCollided(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_type_no);
BBINT _m_minib3d_EntityColor(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_red,BBFLOAT bbt_green,BBFLOAT bbt_blue);
BBFLOAT _m_minib3d_EntityDistance(struct _m_minib3d_TEntity_obj* bbt_ent1,struct _m_minib3d_TEntity_obj* bbt_ent2);
BBINT _m_minib3d_EntityFX(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_fx);
BBINT _m_minib3d_EntityInView(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TCamera_obj* bbt_cam);
BBSTRING _m_minib3d_EntityName(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_EntityOrder(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_order);
BBFLOAT _m_minib3d_EntityX(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityY(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityZ(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityPitch(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityYaw(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityRoll(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityScaleX(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityScaleY(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBFLOAT _m_minib3d_EntityScaleZ(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_glob);
BBINT _m_minib3d_PositionEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBINT bbt_glob);
BBINT _m_minib3d_RotateEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBINT bbt_glob);
BBINT _m_minib3d_ScaleEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBINT bbt_glob);
BBINT _m_minib3d_EntityParent(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TEntity_obj* bbt_parent_ent,BBINT bbt_glob);
struct _m_minib3d_TEntity_obj* _m_minib3d_EntityPick(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_range);
BBINT _m_minib3d_EntityPickMode(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_pick_mode,BBINT bbt_obscurer);
BBINT _m_minib3d_EntityRadius(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_radius_x,BBFLOAT bbt_radius_y);
BBINT _m_minib3d_EntityShininess(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_shine);
BBINT _m_minib3d_EntityTexture(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_frame,BBINT bbt_index);
BBINT _m_minib3d_EntityType(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_type_no,BBINT bbt_recursive);
BBINT _m_minib3d_EntityVisible(struct _m_minib3d_TEntity_obj* bbt_src_ent,struct _m_minib3d_TEntity_obj* bbt_dest_ent);
BBINT _m_minib3d_ExtractAnimSeq(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_first_frame,BBINT bbt_last_frame,BBINT bbt_seq);
struct _m_minib3d_TEntity_obj* _m_minib3d_FindChild(struct _m_minib3d_TEntity_obj* bbt_ent,BBSTRING bbt_child_name);
struct _m_minib3d_TSurface_obj* _m_minib3d_FindSurface(struct _m_minib3d_TMesh_obj* bbt_mesh,struct _m_minib3d_TBrush_obj* bbt_brush);
BBFLOAT _m_minib3d_MeshWidth(struct _m_minib3d_TMesh_obj* bbt_mesh);
BBFLOAT _m_minib3d_MeshHeight(struct _m_minib3d_TMesh_obj* bbt_mesh);
BBFLOAT _m_minib3d_MeshDepth(struct _m_minib3d_TMesh_obj* bbt_mesh);
struct _m_minib3d_TMesh_obj* _m_minib3d_FitMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBFLOAT bbt_width,BBFLOAT bbt_height,BBFLOAT bbt_depth,BBINT bbt_uniform);
struct _m_minib3d_TMesh_obj* _m_minib3d_FlipMesh(struct _m_minib3d_TMesh_obj* bbt_mesh);
BBINT _m_minib3d_FreeBrush(struct _m_minib3d_TBrush_obj* bbt_brush);
BBINT _m_minib3d_FreeEntity(struct _m_minib3d_TEntity_obj* bbt_ent);
struct _m_minib3d_TTexture_obj* _m_minib3d_FreeTexture(struct _m_minib3d_TTexture_obj* bbt_tex);
struct _m_minib3d_TTexture_obj* _m_minib3d_GetBrushTexture(struct _m_minib3d_TBrush_obj* bbt_brush,BBINT bbt_index);
struct _m_minib3d_TEntity_obj* _m_minib3d_GetChild(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_child_no);
struct _m_minib3d_TBrush_obj* _m_minib3d_GetEntityBrush(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_GetEntityType(struct _m_minib3d_TEntity_obj* bbt_ent);
BBFLOAT _m_minib3d_GetMatElement(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_row,BBINT bbt_col);
struct _m_minib3d_TEntity_obj* _m_minib3d_GetParent(struct _m_minib3d_TEntity_obj* bbt_ent);
struct _m_minib3d_TBrush_obj* _m_minib3d_GetSurfaceBrush(struct _m_minib3d_TSurface_obj* bbt_surf);
BBINT _m_minib3d_Graphics3D(BBINT bbt_width,BBINT bbt_height,BBINT bbt_depth,BBINT bbt_mode,BBINT bbt_rate,BBINT bbt_flags);
BBINT _m_minib3d_HandleSprite(struct _m_minib3d_TSprite_obj* bbt_sprite,BBFLOAT bbt_h_x,BBFLOAT bbt_h_y);
BBINT _m_minib3d_HideEntity(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_LightColor(struct _m_minib3d_TLight_obj* bbt_light,BBFLOAT bbt_red,BBFLOAT bbt_green,BBFLOAT bbt_blue);
BBINT _m_minib3d_LightConeAngles(struct _m_minib3d_TLight_obj* bbt_light,BBFLOAT bbt_inner_ang,BBFLOAT bbt_outer_ang);
BBINT _m_minib3d_LightRange(struct _m_minib3d_TLight_obj* bbt_light,BBFLOAT bbt_range);
struct _m_minib3d_TEntity_obj* _m_minib3d_LinePick(BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBFLOAT bbt_dx,BBFLOAT bbt_dy,BBFLOAT bbt_dz,BBFLOAT bbt_radius);
struct _m_minib3d_TTexture_obj* _m_minib3d_LoadAnimTexture(BBSTRING bbt_file,BBINT bbt_flags,BBINT bbt_frame_width,BBINT bbt_frame_height,BBINT bbt_first_frame,BBINT bbt_frame_count);
struct _m_minib3d_TMesh_obj* _m_minib3d_LoadAnimMesh(BBSTRING bbt_file,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TBrush_obj* _m_minib3d_LoadBrush(BBSTRING bbt_file,BBINT bbt_flags,BBFLOAT bbt_u_scale,BBFLOAT bbt_v_scale);
struct _m_minib3d_TMesh_obj* _m_minib3d_LoadMesh(BBSTRING bbt_file,struct _m_minib3d_TEntity_obj* bbt_parent);
struct _m_minib3d_TTexture_obj* _m_minib3d_LoadTexture(BBSTRING bbt_file,BBINT bbt_flags);
struct _m_minib3d_TSprite_obj* _m_minib3d_LoadSprite(BBSTRING bbt_tex_file,BBINT bbt_tex_flag,struct _m_minib3d_TEntity_obj* bbt_parent);
BBINT _m_minib3d_MoveEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z);
BBINT _m_minib3d_NameEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBSTRING bbt_name);
BBINT _m_minib3d_PaintEntity(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TBrush_obj* bbt_brush);
struct _m_minib3d_TMesh_obj* _m_minib3d_PaintMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,struct _m_minib3d_TBrush_obj* bbt_brush);
BBINT _m_minib3d_PaintSurface(struct _m_minib3d_TSurface_obj* bbt_surf,struct _m_minib3d_TBrush_obj* bbt_brush);
struct _m_minib3d_TEntity_obj* _m_minib3d_PickedEntity();
BBFLOAT _m_minib3d_PickedNX();
BBFLOAT _m_minib3d_PickedNY();
BBFLOAT _m_minib3d_PickedNZ();
struct _m_minib3d_TSurface_obj* _m_minib3d_PickedSurface();
BBFLOAT _m_minib3d_PickedTime();
BBINT _m_minib3d_PickedTriangle();
BBFLOAT _m_minib3d_PickedX();
BBFLOAT _m_minib3d_PickedY();
BBFLOAT _m_minib3d_PickedZ();
BBINT _m_minib3d_PointEntity(struct _m_minib3d_TEntity_obj* bbt_ent,struct _m_minib3d_TEntity_obj* bbt_target_ent,BBFLOAT bbt_roll);
struct _m_minib3d_TMesh_obj* _m_minib3d_PositionMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,BBFLOAT bbt_px,BBFLOAT bbt_py,BBFLOAT bbt_pz);
BBINT _m_minib3d_PositionTexture(struct _m_minib3d_TTexture_obj* bbt_tex,BBFLOAT bbt_u_pos,BBFLOAT bbt_v_pos);
BBFLOAT _m_minib3d_ProjectedX();
BBFLOAT _m_minib3d_ProjectedY();
BBFLOAT _m_minib3d_ProjectedZ();
BBINT _m_minib3d_RenderWorld();
BBINT _m_minib3d_ResetEntity(struct _m_minib3d_TEntity_obj* bbt_ent);
struct _m_minib3d_TMesh_obj* _m_minib3d_RotateMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,BBFLOAT bbt_pitch,BBFLOAT bbt_yaw,BBFLOAT bbt_roll);
BBINT _m_minib3d_RotateSprite(struct _m_minib3d_TSprite_obj* bbt_sprite,BBFLOAT bbt_ang);
BBINT _m_minib3d_RotateTexture(struct _m_minib3d_TTexture_obj* bbt_tex,BBFLOAT bbt_ang);
struct _m_minib3d_TMesh_obj* _m_minib3d_ScaleMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,BBFLOAT bbt_sx,BBFLOAT bbt_sy,BBFLOAT bbt_sz);
BBINT _m_minib3d_ScaleSprite(struct _m_minib3d_TSprite_obj* bbt_sprite,BBFLOAT bbt_s_x,BBFLOAT bbt_s_y);
BBINT _m_minib3d_ScaleTexture(struct _m_minib3d_TTexture_obj* bbt_tex,BBFLOAT bbt_u_scale,BBFLOAT bbt_v_scale);
BBINT _m_minib3d_SetAnimTime(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_time,BBINT bbt_seq);
BBINT _m_minib3d_SetCubeFace(struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_face);
BBINT _m_minib3d_SetCubeMode(struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_mode);
BBINT _m_minib3d_ShowEntity(struct _m_minib3d_TEntity_obj* bbt_ent);
BBINT _m_minib3d_SpriteViewMode(struct _m_minib3d_TSprite_obj* bbt_sprite,BBINT bbt_mode);
BBINT _m_minib3d_TextureBlend(struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_blend);
BBINT _m_minib3d_TextureCoords(struct _m_minib3d_TTexture_obj* bbt_tex,BBINT bbt_coords);
BBINT _m_minib3d_TextureHeight(struct _m_minib3d_TTexture_obj* bbt_tex);
BBINT _m_minib3d_TextureFilter(BBSTRING bbt_match_text,BBINT bbt_flags);
BBSTRING _m_minib3d_TextureName(struct _m_minib3d_TTexture_obj* bbt_tex);
BBINT _m_minib3d_TextureWidth(struct _m_minib3d_TTexture_obj* bbt_tex);
BBFLOAT _m_minib3d_TFormedX();
BBFLOAT _m_minib3d_TFormedY();
BBFLOAT _m_minib3d_TFormedZ();
BBINT _m_minib3d_TFormNormal(BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,struct _m_minib3d_TEntity_obj* bbt_src_ent,struct _m_minib3d_TEntity_obj* bbt_dest_ent);
BBINT _m_minib3d_TFormPoint(BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,struct _m_minib3d_TEntity_obj* bbt_src_ent,struct _m_minib3d_TEntity_obj* bbt_dest_ent);
BBINT _m_minib3d_TFormVector(BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,struct _m_minib3d_TEntity_obj* bbt_src_ent,struct _m_minib3d_TEntity_obj* bbt_dest_ent);
BBINT _m_minib3d_TranslateEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBINT bbt_glob);
BBINT _m_minib3d_TriangleVertex(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_tri_no,BBINT bbt_corner);
BBINT _m_minib3d_TurnEntity(struct _m_minib3d_TEntity_obj* bbt_ent,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z,BBINT bbt_glob);
BBINT _m_minib3d_UpdateNormals(struct _m_minib3d_TMesh_obj* bbt_mesh);
BBINT _m_minib3d_UpdateWorld(BBFLOAT bbt_anim_speed);
BBFLOAT _m_minib3d_VectorPitch(BBFLOAT bbt_vx,BBFLOAT bbt_vy,BBFLOAT bbt_vz);
BBFLOAT _m_minib3d_VectorYaw(BBFLOAT bbt_vx,BBFLOAT bbt_vy,BBFLOAT bbt_vz);
BBFLOAT _m_minib3d_VertexAlpha(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBFLOAT _m_minib3d_VertexBlue(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBINT _m_minib3d_VertexColor(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBFLOAT bbt_r,BBFLOAT bbt_g,BBFLOAT bbt_b,BBFLOAT bbt_a);
BBINT _m_minib3d_VertexCoords(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBFLOAT bbt_x,BBFLOAT bbt_y,BBFLOAT bbt_z);
BBFLOAT _m_minib3d_VertexGreen(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBINT _m_minib3d_VertexNormal(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBFLOAT bbt_nx,BBFLOAT bbt_ny,BBFLOAT bbt_nz);
BBFLOAT _m_minib3d_VertexNX(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBFLOAT _m_minib3d_VertexNY(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBFLOAT _m_minib3d_VertexNZ(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBFLOAT _m_minib3d_VertexRed(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBINT _m_minib3d_VertexTexCoords(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBFLOAT bbt_u,BBFLOAT bbt_v,BBFLOAT bbt_w,BBINT bbt_coord_set);
BBFLOAT _m_minib3d_VertexU(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBINT bbt_coord_set);
BBFLOAT _m_minib3d_VertexV(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBINT bbt_coord_set);
BBFLOAT _m_minib3d_VertexW(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid,BBINT bbt_coord_set);
BBFLOAT _m_minib3d_VertexX(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBFLOAT _m_minib3d_VertexY(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBFLOAT _m_minib3d_VertexZ(struct _m_minib3d_TSurface_obj* bbt_surf,BBINT bbt_vid);
BBINT _m_minib3d_Wireframe(BBINT bbt_enable);
BBINT _m_minib3d_Text(BBINT bbt_x,BBINT bbt_y,BBSTRING bbt_str);
BBINT _m_minib3d_BeginMax2D();
BBINT _m_minib3d_EndMax2D();
BBINT _m_minib3d_LightMesh(struct _m_minib3d_TMesh_obj* bbt_mesh,BBFLOAT bbt_red,BBFLOAT bbt_green,BBFLOAT bbt_blue,BBFLOAT bbt_range,BBFLOAT bbt_light_x,BBFLOAT bbt_light_y,BBFLOAT bbt_light_z);
BBINT _m_minib3d_MeshesIntersect(struct _m_minib3d_TMesh_obj* bbt_mesh1,struct _m_minib3d_TMesh_obj* bbt_mesh2);
BBINT _m_minib3d_CreatePlane(BBINT bbt_sub_divs,struct _m_minib3d_TEntity_obj* bbt_parent);
BBINT _m_minib3d_AlignToVector(BBFLOAT bbt_vx,BBFLOAT bbt_vy,BBFLOAT bbt_vz,BBINT bbt_axis,BBINT bbt_rate);
BBINT _m_minib3d_LoadAnimSeq(struct _m_minib3d_TEntity_obj* bbt_ent,BBSTRING bbt_filename);
BBINT _m_minib3d_SetAnimKey(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_frame,BBINT bbt_pos_key,BBINT bbt_rot_key,BBINT bbt_scale_key);
BBINT _m_minib3d_AddAnimSeq(struct _m_minib3d_TEntity_obj* bbt_ent,BBINT bbt_length);
extern BBINT C_DeleteVecObject(BBBYTE* bbt_v);
extern BBFLOAT C_VecX(BBBYTE* bbt_vec);
extern BBFLOAT C_VecY(BBBYTE* bbt_vec);
extern BBFLOAT C_VecZ(BBBYTE* bbt_vec);
extern BBINT C_DeleteLineObject(BBBYTE* bbt_line);
extern BBINT C_DeleteMatrixObject(BBBYTE* bbt_mat);
extern BBINT C_DeleteTFormObject(BBBYTE* bbt_tform);

#endif
